//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.SanjieService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShipFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierReceiverField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPO {
            get {
                return this.OrderPOField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPOField, value) != true)) {
                    this.OrderPOField = value;
                    this.RaisePropertyChanged("OrderPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShipFee {
            get {
                return this.ShipFeeField;
            }
            set {
                if ((this.ShipFeeField.Equals(value) != true)) {
                    this.ShipFeeField = value;
                    this.RaisePropertyChanged("ShipFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAbbr {
            get {
                return this.SupplierAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAbbrField, value) != true)) {
                    this.SupplierAbbrField = value;
                    this.RaisePropertyChanged("SupplierAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAddress {
            get {
                return this.SupplierAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAddressField, value) != true)) {
                    this.SupplierAddressField = value;
                    this.RaisePropertyChanged("SupplierAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierEmail {
            get {
                return this.SupplierEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierEmailField, value) != true)) {
                    this.SupplierEmailField = value;
                    this.RaisePropertyChanged("SupplierEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierReceiver {
            get {
                return this.SupplierReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierReceiverField, value) != true)) {
                    this.SupplierReceiverField = value;
                    this.RaisePropertyChanged("SupplierReceiver");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrderItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HowManyTargetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MaterialOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaterialPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvideRawMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SJIngredientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowManyTargets {
            get {
                return this.HowManyTargetsField;
            }
            set {
                if ((object.ReferenceEquals(this.HowManyTargetsField, value) != true)) {
                    this.HowManyTargetsField = value;
                    this.RaisePropertyChanged("HowManyTargets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MaterialOrderID {
            get {
                return this.MaterialOrderIDField;
            }
            set {
                if ((this.MaterialOrderIDField.Equals(value) != true)) {
                    this.MaterialOrderIDField = value;
                    this.RaisePropertyChanged("MaterialOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaterialPrice {
            get {
                return this.MaterialPriceField;
            }
            set {
                if ((this.MaterialPriceField.Equals(value) != true)) {
                    this.MaterialPriceField = value;
                    this.RaisePropertyChanged("MaterialPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderItemNumber {
            get {
                return this.OrderItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderItemNumberField, value) != true)) {
                    this.OrderItemNumberField = value;
                    this.RaisePropertyChanged("OrderItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvideRawMaterial {
            get {
                return this.ProvideRawMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvideRawMaterialField, value) != true)) {
                    this.ProvideRawMaterialField = value;
                    this.RaisePropertyChanged("ProvideRawMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SJIngredient {
            get {
                return this.SJIngredientField;
            }
            set {
                if ((object.ReferenceEquals(this.SJIngredientField, value) != true)) {
                    this.SJIngredientField = value;
                    this.RaisePropertyChanged("SJIngredient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrderItemExtra", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrderItemExtra : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSClient.SanjieService.DcMaterialOrder MaterialOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSClient.SanjieService.DcMaterialOrderItem MaterialOrderItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSClient.SanjieService.DcMaterialOrder MaterialOrder {
            get {
                return this.MaterialOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialOrderField, value) != true)) {
                    this.MaterialOrderField = value;
                    this.RaisePropertyChanged("MaterialOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSClient.SanjieService.DcMaterialOrderItem MaterialOrderItem {
            get {
                return this.MaterialOrderItemField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialOrderItemField, value) != true)) {
                    this.MaterialOrderItemField = value;
                    this.RaisePropertyChanged("MaterialOrderItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialInventoryIn", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialInventoryIn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuickRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialLot {
            get {
                return this.MaterialLotField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialLotField, value) != true)) {
                    this.MaterialLotField = value;
                    this.RaisePropertyChanged("MaterialLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialSource {
            get {
                return this.MaterialSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialSourceField, value) != true)) {
                    this.MaterialSourceField = value;
                    this.RaisePropertyChanged("MaterialSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuickRemark {
            get {
                return this.QuickRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.QuickRemarkField, value) != true)) {
                    this.QuickRemarkField = value;
                    this.RaisePropertyChanged("QuickRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierPO {
            get {
                return this.SupplierPOField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierPOField, value) != true)) {
                    this.SupplierPOField = value;
                    this.RaisePropertyChanged("SupplierPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDCompound", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDCompound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoilingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeltingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoilingPoint {
            get {
                return this.BoilingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.BoilingPointField, value) != true)) {
                    this.BoilingPointField = value;
                    this.RaisePropertyChanged("BoilingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Density {
            get {
                return this.DensityField;
            }
            set {
                if ((this.DensityField.Equals(value) != true)) {
                    this.DensityField = value;
                    this.RaisePropertyChanged("Density");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InformationSource {
            get {
                return this.InformationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationSourceField, value) != true)) {
                    this.InformationSourceField = value;
                    this.RaisePropertyChanged("InformationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeltingPoint {
            get {
                return this.MeltingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.MeltingPointField, value) != true)) {
                    this.MeltingPointField = value;
                    this.RaisePropertyChanged("MeltingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialProperty {
            get {
                return this.SpecialPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialPropertyField, value) != true)) {
                    this.SpecialPropertyField = value;
                    this.RaisePropertyChanged("SpecialProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialInventoryOut", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialInventoryOut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ActualWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ActualWeight {
            get {
                return this.ActualWeightField;
            }
            set {
                if ((this.ActualWeightField.Equals(value) != true)) {
                    this.ActualWeightField = value;
                    this.RaisePropertyChanged("ActualWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialLot {
            get {
                return this.MaterialLotField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialLotField, value) != true)) {
                    this.MaterialLotField = value;
                    this.RaisePropertyChanged("MaterialLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcItemDebit", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcItemDebit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creditor {
            get {
                return this.CreditorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorField, value) != true)) {
                    this.CreditorField = value;
                    this.RaisePropertyChanged("Creditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLot {
            get {
                return this.ItemLotField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLotField, value) != true)) {
                    this.ItemLotField = value;
                    this.RaisePropertyChanged("ItemLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemProperty {
            get {
                return this.ItemPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPropertyField, value) != true)) {
                    this.ItemPropertyField = value;
                    this.RaisePropertyChanged("ItemProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeField, value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((this.RemarkField.Equals(value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SanjieService.ISanjieService")]
    public interface ISanjieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrder", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderResponse")]
        PMSClient.SanjieService.DcMaterialOrder[] GetMaterialOrder(int skip, int take, string orderPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrder", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrder[]> GetMaterialOrderAsync(int skip, int take, string orderPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderCountResponse")]
        int GetMaterialOrderCount(string orderPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderCountResponse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderCountAsync(string orderPo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItembyMaterialIDResponse")]
        PMSClient.SanjieService.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItembyMaterialIDResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtras", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasResponse")]
        PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtras(int skip, int take, string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtras", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtrasAsync(int skip, int take, string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasCountResponse")]
        int GetMaterialOrderItemExtrasCount(string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasCountResponse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderItemExtrasCountAsync(string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompleted", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedResponse")]
        PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtrasUnCompleted(int skip, int take, string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompleted", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtrasUnCompletedAsync(int skip, int take, string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedCountRespo" +
            "nse")]
        int GetMaterialOrderItemExtrasUnCompletedCount(string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtrasUnCompletedCountRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderItemExtrasUnCompletedCountAsync(string composition, string pminumber, string orderitemnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/FinishMaterialOrder", ReplyAction="http://tempuri.org/ISanjieService/FinishMaterialOrderResponse")]
        int FinishMaterialOrder(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/FinishMaterialOrder", ReplyAction="http://tempuri.org/ISanjieService/FinishMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> FinishMaterialOrderAsync(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/FinishMaterialOrderItem", ReplyAction="http://tempuri.org/ISanjieService/FinishMaterialOrderItemResponse")]
        int FinishMaterialOrderItem(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/FinishMaterialOrderItem", ReplyAction="http://tempuri.org/ISanjieService/FinishMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> FinishMaterialOrderItemAsync(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/ISanjieService/UpdateMaterialOrderItemResponse")]
        int UpdateMaterialOrderItem(PMSClient.SanjieService.DcMaterialOrderItem model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/ISanjieService/UpdateMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSClient.SanjieService.DcMaterialOrderItem model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/AddToMaterialIn", ReplyAction="http://tempuri.org/ISanjieService/AddToMaterialInResponse")]
        int AddToMaterialIn(PMSClient.SanjieService.DcMaterialInventoryIn model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/AddToMaterialIn", ReplyAction="http://tempuri.org/ISanjieService/AddToMaterialInResponse")]
        System.Threading.Tasks.Task<int> AddToMaterialInAsync(PMSClient.SanjieService.DcMaterialInventoryIn model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/AddToCompound", ReplyAction="http://tempuri.org/ISanjieService/AddToCompoundResponse")]
        int AddToCompound(PMSClient.SanjieService.DcBDCompound model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/AddToCompound", ReplyAction="http://tempuri.org/ISanjieService/AddToCompoundResponse")]
        System.Threading.Tasks.Task<int> AddToCompoundAsync(PMSClient.SanjieService.DcBDCompound model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryIns", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInsResponse")]
        PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryIns(int skip, int take, string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryIns", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInsResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInsAsync(int skip, int take, string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountResponse")]
        int GetMaterialInventoryInCount(string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountResponse")]
        System.Threading.Tasks.Task<int> GetMaterialInventoryInCountAsync(string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOuts", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsResponse")]
        PMSClient.SanjieService.DcMaterialInventoryOut[] GetMaterialInventoryOuts(int skip, int take, string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOuts", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryOut[]> GetMaterialInventoryOutsAsync(int skip, int take, string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountResponse")]
        int GetMaterialInventoryOutCount(string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCount", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountResponse")]
        System.Threading.Tasks.Task<int> GetMaterialInventoryOutCountAsync(string composition, string batchnumber, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetItemDebit", ReplyAction="http://tempuri.org/ISanjieService/GetItemDebitResponse")]
        PMSClient.SanjieService.DcItemDebit[] GetItemDebit(int s, int t, string itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetItemDebit", ReplyAction="http://tempuri.org/ISanjieService/GetItemDebitResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcItemDebit[]> GetItemDebitAsync(int s, int t, string itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetItemDebitCount", ReplyAction="http://tempuri.org/ISanjieService/GetItemDebitCountResponse")]
        int GetItemDebitCount(string itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetItemDebitCount", ReplyAction="http://tempuri.org/ISanjieService/GetItemDebitCountResponse")]
        System.Threading.Tasks.Task<int> GetItemDebitCountAsync(string itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraByYearResponse")]
        PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtraByYear(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraByYearResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtraByYearAsync(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraCountByYearResponse")]
        int GetMaterialOrderItemExtraCountByYear(string composition, string pminumber, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialOrderItemExtraCountByYearResponse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderItemExtraCountByYearAsync(string composition, string pminumber, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInByYearResponse")]
        PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryInByYear(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInByYearResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInByYearAsync(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountByYearResponse")]
        int GetMaterialInventoryInCountByYear(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInCountByYearResponse")]
        System.Threading.Tasks.Task<int> GetMaterialInventoryInCountByYearAsync(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsByYearResponse")]
        PMSClient.SanjieService.DcMaterialInventoryOut[] GetMaterialInventoryOutsByYear(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutsByYearResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryOut[]> GetMaterialInventoryOutsByYearAsync(int skip, int take, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountByYearResponse")]
        int GetMaterialInventoryOutCountByYear(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountByYear", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryOutCountByYearResponse")]
        System.Threading.Tasks.Task<int> GetMaterialInventoryOutCountByYearAsync(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInTemporary", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInTemporaryResponse")]
        PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryInTemporary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISanjieService/GetMaterialInventoryInTemporary", ReplyAction="http://tempuri.org/ISanjieService/GetMaterialInventoryInTemporaryResponse")]
        System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInTemporaryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISanjieServiceChannel : PMSClient.SanjieService.ISanjieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SanjieServiceClient : System.ServiceModel.ClientBase<PMSClient.SanjieService.ISanjieService>, PMSClient.SanjieService.ISanjieService {
        
        public SanjieServiceClient() {
        }
        
        public SanjieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SanjieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SanjieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SanjieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.SanjieService.DcMaterialOrder[] GetMaterialOrder(int skip, int take, string orderPo) {
            return base.Channel.GetMaterialOrder(skip, take, orderPo);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrder[]> GetMaterialOrderAsync(int skip, int take, string orderPo) {
            return base.Channel.GetMaterialOrderAsync(skip, take, orderPo);
        }
        
        public int GetMaterialOrderCount(string orderPo) {
            return base.Channel.GetMaterialOrderCount(orderPo);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderCountAsync(string orderPo) {
            return base.Channel.GetMaterialOrderCountAsync(orderPo);
        }
        
        public PMSClient.SanjieService.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialID(id);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialIDAsync(id);
        }
        
        public PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtras(int skip, int take, string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtras(skip, take, composition, pminumber, orderitemnumber);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtrasAsync(int skip, int take, string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasAsync(skip, take, composition, pminumber, orderitemnumber);
        }
        
        public int GetMaterialOrderItemExtrasCount(string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasCount(composition, pminumber, orderitemnumber);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderItemExtrasCountAsync(string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasCountAsync(composition, pminumber, orderitemnumber);
        }
        
        public PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtrasUnCompleted(int skip, int take, string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasUnCompleted(skip, take, composition, pminumber, orderitemnumber);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtrasUnCompletedAsync(int skip, int take, string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasUnCompletedAsync(skip, take, composition, pminumber, orderitemnumber);
        }
        
        public int GetMaterialOrderItemExtrasUnCompletedCount(string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasUnCompletedCount(composition, pminumber, orderitemnumber);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderItemExtrasUnCompletedCountAsync(string composition, string pminumber, string orderitemnumber) {
            return base.Channel.GetMaterialOrderItemExtrasUnCompletedCountAsync(composition, pminumber, orderitemnumber);
        }
        
        public int FinishMaterialOrder(System.Guid id, string uid) {
            return base.Channel.FinishMaterialOrder(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> FinishMaterialOrderAsync(System.Guid id, string uid) {
            return base.Channel.FinishMaterialOrderAsync(id, uid);
        }
        
        public int FinishMaterialOrderItem(System.Guid id, string uid) {
            return base.Channel.FinishMaterialOrderItem(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> FinishMaterialOrderItemAsync(System.Guid id, string uid) {
            return base.Channel.FinishMaterialOrderItemAsync(id, uid);
        }
        
        public int UpdateMaterialOrderItem(PMSClient.SanjieService.DcMaterialOrderItem model, string uid) {
            return base.Channel.UpdateMaterialOrderItem(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSClient.SanjieService.DcMaterialOrderItem model, string uid) {
            return base.Channel.UpdateMaterialOrderItemAsync(model, uid);
        }
        
        public int AddToMaterialIn(PMSClient.SanjieService.DcMaterialInventoryIn model, string uid) {
            return base.Channel.AddToMaterialIn(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> AddToMaterialInAsync(PMSClient.SanjieService.DcMaterialInventoryIn model, string uid) {
            return base.Channel.AddToMaterialInAsync(model, uid);
        }
        
        public int AddToCompound(PMSClient.SanjieService.DcBDCompound model, string uid) {
            return base.Channel.AddToCompound(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> AddToCompoundAsync(PMSClient.SanjieService.DcBDCompound model, string uid) {
            return base.Channel.AddToCompoundAsync(model, uid);
        }
        
        public PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryIns(int skip, int take, string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryIns(skip, take, composition, batchnumber, pminumber);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInsAsync(int skip, int take, string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryInsAsync(skip, take, composition, batchnumber, pminumber);
        }
        
        public int GetMaterialInventoryInCount(string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryInCount(composition, batchnumber, pminumber);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialInventoryInCountAsync(string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryInCountAsync(composition, batchnumber, pminumber);
        }
        
        public PMSClient.SanjieService.DcMaterialInventoryOut[] GetMaterialInventoryOuts(int skip, int take, string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryOuts(skip, take, composition, batchnumber, pminumber);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryOut[]> GetMaterialInventoryOutsAsync(int skip, int take, string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryOutsAsync(skip, take, composition, batchnumber, pminumber);
        }
        
        public int GetMaterialInventoryOutCount(string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryOutCount(composition, batchnumber, pminumber);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialInventoryOutCountAsync(string composition, string batchnumber, string pminumber) {
            return base.Channel.GetMaterialInventoryOutCountAsync(composition, batchnumber, pminumber);
        }
        
        public PMSClient.SanjieService.DcItemDebit[] GetItemDebit(int s, int t, string itemType, string itemName) {
            return base.Channel.GetItemDebit(s, t, itemType, itemName);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcItemDebit[]> GetItemDebitAsync(int s, int t, string itemType, string itemName) {
            return base.Channel.GetItemDebitAsync(s, t, itemType, itemName);
        }
        
        public int GetItemDebitCount(string itemType, string itemName) {
            return base.Channel.GetItemDebitCount(itemType, itemName);
        }
        
        public System.Threading.Tasks.Task<int> GetItemDebitCountAsync(string itemType, string itemName) {
            return base.Channel.GetItemDebitCountAsync(itemType, itemName);
        }
        
        public PMSClient.SanjieService.DcMaterialOrderItemExtra[] GetMaterialOrderItemExtraByYear(int skip, int take, int year) {
            return base.Channel.GetMaterialOrderItemExtraByYear(skip, take, year);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialOrderItemExtra[]> GetMaterialOrderItemExtraByYearAsync(int skip, int take, int year) {
            return base.Channel.GetMaterialOrderItemExtraByYearAsync(skip, take, year);
        }
        
        public int GetMaterialOrderItemExtraCountByYear(string composition, string pminumber, int year) {
            return base.Channel.GetMaterialOrderItemExtraCountByYear(composition, pminumber, year);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderItemExtraCountByYearAsync(string composition, string pminumber, int year) {
            return base.Channel.GetMaterialOrderItemExtraCountByYearAsync(composition, pminumber, year);
        }
        
        public PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryInByYear(int skip, int take, int year) {
            return base.Channel.GetMaterialInventoryInByYear(skip, take, year);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInByYearAsync(int skip, int take, int year) {
            return base.Channel.GetMaterialInventoryInByYearAsync(skip, take, year);
        }
        
        public int GetMaterialInventoryInCountByYear(int year) {
            return base.Channel.GetMaterialInventoryInCountByYear(year);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialInventoryInCountByYearAsync(int year) {
            return base.Channel.GetMaterialInventoryInCountByYearAsync(year);
        }
        
        public PMSClient.SanjieService.DcMaterialInventoryOut[] GetMaterialInventoryOutsByYear(int skip, int take, int year) {
            return base.Channel.GetMaterialInventoryOutsByYear(skip, take, year);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryOut[]> GetMaterialInventoryOutsByYearAsync(int skip, int take, int year) {
            return base.Channel.GetMaterialInventoryOutsByYearAsync(skip, take, year);
        }
        
        public int GetMaterialInventoryOutCountByYear(int year) {
            return base.Channel.GetMaterialInventoryOutCountByYear(year);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialInventoryOutCountByYearAsync(int year) {
            return base.Channel.GetMaterialInventoryOutCountByYearAsync(year);
        }
        
        public PMSClient.SanjieService.DcMaterialInventoryIn[] GetMaterialInventoryInTemporary() {
            return base.Channel.GetMaterialInventoryInTemporary();
        }
        
        public System.Threading.Tasks.Task<PMSClient.SanjieService.DcMaterialInventoryIn[]> GetMaterialInventoryInTemporaryAsync() {
            return base.Channel.GetMaterialInventoryInTemporaryAsync();
        }
    }
}
