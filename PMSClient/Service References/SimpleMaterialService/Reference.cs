//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.SimpleMaterialService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcSimpleMaterial", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcSimpleMaterial : PMSClient.SimpleMaterialService.DcModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementName {
            get {
                return this.ElementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementNameField, value) != true)) {
                    this.ElementNameField = value;
                    this.RaisePropertyChanged("ElementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcModelBase", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PMSClient.SimpleMaterialService.DcSimpleMaterial))]
    public partial class DcModelBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SimpleMaterialService.ISimpleMaterialService")]
    public interface ISimpleMaterialService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialResponse")]
        PMSClient.SimpleMaterialService.DcSimpleMaterial[] GetSimpleMaterial(int s, int t, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialResponse")]
        System.Threading.Tasks.Task<PMSClient.SimpleMaterialService.DcSimpleMaterial[]> GetSimpleMaterialAsync(int s, int t, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialCount", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialCountResponse")]
        int GetSimpleMaterialCount(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialCount", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialCountResponse")]
        System.Threading.Tasks.Task<int> GetSimpleMaterialCountAsync(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialByComposition", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialByCompositionResponse")]
        PMSClient.SimpleMaterialService.DcSimpleMaterial GetSimpleMaterialByComposition(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialByComposition", ReplyAction="http://tempuri.org/ISimpleMaterialService/GetSimpleMaterialByCompositionResponse")]
        System.Threading.Tasks.Task<PMSClient.SimpleMaterialService.DcSimpleMaterial> GetSimpleMaterialByCompositionAsync(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/AddSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/AddSimpleMaterialResponse")]
        void AddSimpleMaterial(PMSClient.SimpleMaterialService.DcSimpleMaterial model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/AddSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/AddSimpleMaterialResponse")]
        System.Threading.Tasks.Task AddSimpleMaterialAsync(PMSClient.SimpleMaterialService.DcSimpleMaterial model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/UpdateSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/UpdateSimpleMaterialResponse")]
        void UpdateSimpleMaterial(PMSClient.SimpleMaterialService.DcSimpleMaterial model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMaterialService/UpdateSimpleMaterial", ReplyAction="http://tempuri.org/ISimpleMaterialService/UpdateSimpleMaterialResponse")]
        System.Threading.Tasks.Task UpdateSimpleMaterialAsync(PMSClient.SimpleMaterialService.DcSimpleMaterial model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleMaterialServiceChannel : PMSClient.SimpleMaterialService.ISimpleMaterialService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleMaterialServiceClient : System.ServiceModel.ClientBase<PMSClient.SimpleMaterialService.ISimpleMaterialService>, PMSClient.SimpleMaterialService.ISimpleMaterialService {
        
        public SimpleMaterialServiceClient() {
        }
        
        public SimpleMaterialServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleMaterialServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleMaterialServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleMaterialServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.SimpleMaterialService.DcSimpleMaterial[] GetSimpleMaterial(int s, int t, string composition) {
            return base.Channel.GetSimpleMaterial(s, t, composition);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SimpleMaterialService.DcSimpleMaterial[]> GetSimpleMaterialAsync(int s, int t, string composition) {
            return base.Channel.GetSimpleMaterialAsync(s, t, composition);
        }
        
        public int GetSimpleMaterialCount(string composition) {
            return base.Channel.GetSimpleMaterialCount(composition);
        }
        
        public System.Threading.Tasks.Task<int> GetSimpleMaterialCountAsync(string composition) {
            return base.Channel.GetSimpleMaterialCountAsync(composition);
        }
        
        public PMSClient.SimpleMaterialService.DcSimpleMaterial GetSimpleMaterialByComposition(string composition) {
            return base.Channel.GetSimpleMaterialByComposition(composition);
        }
        
        public System.Threading.Tasks.Task<PMSClient.SimpleMaterialService.DcSimpleMaterial> GetSimpleMaterialByCompositionAsync(string composition) {
            return base.Channel.GetSimpleMaterialByCompositionAsync(composition);
        }
        
        public void AddSimpleMaterial(PMSClient.SimpleMaterialService.DcSimpleMaterial model) {
            base.Channel.AddSimpleMaterial(model);
        }
        
        public System.Threading.Tasks.Task AddSimpleMaterialAsync(PMSClient.SimpleMaterialService.DcSimpleMaterial model) {
            return base.Channel.AddSimpleMaterialAsync(model);
        }
        
        public void UpdateSimpleMaterial(PMSClient.SimpleMaterialService.DcSimpleMaterial model) {
            base.Channel.UpdateSimpleMaterial(model);
        }
        
        public System.Threading.Tasks.Task UpdateSimpleMaterialAsync(PMSClient.SimpleMaterialService.DcSimpleMaterial model) {
            return base.Channel.UpdateSimpleMaterialAsync(model);
        }
    }
}
