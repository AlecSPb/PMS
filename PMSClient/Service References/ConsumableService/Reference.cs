//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.ConsumableService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcModelBase", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PMSClient.ConsumableService.DcConsumableInventory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PMSClient.ConsumableService.DcConsumablePurchase))]
    public partial class DcModelBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcConsumableInventory", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcConsumableInventory : PMSClient.ConsumableService.DcModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxWarningQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinWarningQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonInChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorePositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountHistory {
            get {
                return this.CountHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountHistoryField, value) != true)) {
                    this.CountHistoryField = value;
                    this.RaisePropertyChanged("CountHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string History {
            get {
                return this.HistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryField, value) != true)) {
                    this.HistoryField = value;
                    this.RaisePropertyChanged("History");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((this.LastUpdateTimeField.Equals(value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWarningQuantity {
            get {
                return this.MaxWarningQuantityField;
            }
            set {
                if ((this.MaxWarningQuantityField.Equals(value) != true)) {
                    this.MaxWarningQuantityField = value;
                    this.RaisePropertyChanged("MaxWarningQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinWarningQuantity {
            get {
                return this.MinWarningQuantityField;
            }
            set {
                if ((this.MinWarningQuantityField.Equals(value) != true)) {
                    this.MinWarningQuantityField = value;
                    this.RaisePropertyChanged("MinWarningQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonInCharge {
            get {
                return this.PersonInChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonInChargeField, value) != true)) {
                    this.PersonInChargeField = value;
                    this.RaisePropertyChanged("PersonInCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specification {
            get {
                return this.SpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationField, value) != true)) {
                    this.SpecificationField = value;
                    this.RaisePropertyChanged("Specification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorePosition {
            get {
                return this.StorePositionField;
            }
            set {
                if ((object.ReferenceEquals(this.StorePositionField, value) != true)) {
                    this.StorePositionField = value;
                    this.RaisePropertyChanged("StorePosition");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcConsumablePurchase", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcConsumablePurchase : PMSClient.ConsumableService.DcModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((this.LastUpdateTimeField.Equals(value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessHistory {
            get {
                return this.ProcessHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessHistoryField, value) != true)) {
                    this.ProcessHistoryField = value;
                    this.RaisePropertyChanged("ProcessHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specification {
            get {
                return this.SpecificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificationField, value) != true)) {
                    this.SpecificationField = value;
                    this.RaisePropertyChanged("Specification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConsumableService.IConsumableService")]
    public interface IConsumableService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/AddConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/AddConsumablePurchaseResponse")]
        void AddConsumablePurchase(PMSClient.ConsumableService.DcConsumablePurchase model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/AddConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/AddConsumablePurchaseResponse")]
        System.Threading.Tasks.Task AddConsumablePurchaseAsync(PMSClient.ConsumableService.DcConsumablePurchase model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/UpdateConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/UpdateConsumablePurchaseResponse")]
        void UpdateConsumablePurchase(PMSClient.ConsumableService.DcConsumablePurchase model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/UpdateConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/UpdateConsumablePurchaseResponse")]
        System.Threading.Tasks.Task UpdateConsumablePurchaseAsync(PMSClient.ConsumableService.DcConsumablePurchase model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/GetConsumablePurchaseResponse")]
        PMSClient.ConsumableService.DcConsumablePurchase[] GetConsumablePurchase(int s, int t, string itemname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumablePurchase", ReplyAction="http://tempuri.org/IConsumableService/GetConsumablePurchaseResponse")]
        System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumablePurchase[]> GetConsumablePurchaseAsync(int s, int t, string itemname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumablePurchaseCount", ReplyAction="http://tempuri.org/IConsumableService/GetConsumablePurchaseCountResponse")]
        int GetConsumablePurchaseCount(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumablePurchaseCount", ReplyAction="http://tempuri.org/IConsumableService/GetConsumablePurchaseCountResponse")]
        System.Threading.Tasks.Task<int> GetConsumablePurchaseCountAsync(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/AddConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/AddConsumableInventoryResponse")]
        void AddConsumableInventory(PMSClient.ConsumableService.DcConsumableInventory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/AddConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/AddConsumableInventoryResponse")]
        System.Threading.Tasks.Task AddConsumableInventoryAsync(PMSClient.ConsumableService.DcConsumableInventory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/UpdateConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/UpdateConsumableInventoryResponse")]
        void UpdateConsumableInventory(PMSClient.ConsumableService.DcConsumableInventory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/UpdateConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/UpdateConsumableInventoryResponse")]
        System.Threading.Tasks.Task UpdateConsumableInventoryAsync(PMSClient.ConsumableService.DcConsumableInventory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryResponse")]
        PMSClient.ConsumableService.DcConsumableInventory[] GetConsumableInventory(int s, int t, string itemname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventory", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryResponse")]
        System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumableInventory[]> GetConsumableInventoryAsync(int s, int t, string itemname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventoryCount", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryCountResponse")]
        int GetConsumableInventoryCount(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventoryCount", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryCountResponse")]
        System.Threading.Tasks.Task<int> GetConsumableInventoryCountAsync(string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventoryWarning", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryWarningResponse")]
        PMSClient.ConsumableService.DcConsumableInventory[] GetConsumableInventoryWarning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsumableService/GetConsumableInventoryWarning", ReplyAction="http://tempuri.org/IConsumableService/GetConsumableInventoryWarningResponse")]
        System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumableInventory[]> GetConsumableInventoryWarningAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsumableServiceChannel : PMSClient.ConsumableService.IConsumableService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsumableServiceClient : System.ServiceModel.ClientBase<PMSClient.ConsumableService.IConsumableService>, PMSClient.ConsumableService.IConsumableService {
        
        public ConsumableServiceClient() {
        }
        
        public ConsumableServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsumableServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsumableServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsumableServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddConsumablePurchase(PMSClient.ConsumableService.DcConsumablePurchase model) {
            base.Channel.AddConsumablePurchase(model);
        }
        
        public System.Threading.Tasks.Task AddConsumablePurchaseAsync(PMSClient.ConsumableService.DcConsumablePurchase model) {
            return base.Channel.AddConsumablePurchaseAsync(model);
        }
        
        public void UpdateConsumablePurchase(PMSClient.ConsumableService.DcConsumablePurchase model) {
            base.Channel.UpdateConsumablePurchase(model);
        }
        
        public System.Threading.Tasks.Task UpdateConsumablePurchaseAsync(PMSClient.ConsumableService.DcConsumablePurchase model) {
            return base.Channel.UpdateConsumablePurchaseAsync(model);
        }
        
        public PMSClient.ConsumableService.DcConsumablePurchase[] GetConsumablePurchase(int s, int t, string itemname) {
            return base.Channel.GetConsumablePurchase(s, t, itemname);
        }
        
        public System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumablePurchase[]> GetConsumablePurchaseAsync(int s, int t, string itemname) {
            return base.Channel.GetConsumablePurchaseAsync(s, t, itemname);
        }
        
        public int GetConsumablePurchaseCount(string item) {
            return base.Channel.GetConsumablePurchaseCount(item);
        }
        
        public System.Threading.Tasks.Task<int> GetConsumablePurchaseCountAsync(string item) {
            return base.Channel.GetConsumablePurchaseCountAsync(item);
        }
        
        public void AddConsumableInventory(PMSClient.ConsumableService.DcConsumableInventory model) {
            base.Channel.AddConsumableInventory(model);
        }
        
        public System.Threading.Tasks.Task AddConsumableInventoryAsync(PMSClient.ConsumableService.DcConsumableInventory model) {
            return base.Channel.AddConsumableInventoryAsync(model);
        }
        
        public void UpdateConsumableInventory(PMSClient.ConsumableService.DcConsumableInventory model) {
            base.Channel.UpdateConsumableInventory(model);
        }
        
        public System.Threading.Tasks.Task UpdateConsumableInventoryAsync(PMSClient.ConsumableService.DcConsumableInventory model) {
            return base.Channel.UpdateConsumableInventoryAsync(model);
        }
        
        public PMSClient.ConsumableService.DcConsumableInventory[] GetConsumableInventory(int s, int t, string itemname) {
            return base.Channel.GetConsumableInventory(s, t, itemname);
        }
        
        public System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumableInventory[]> GetConsumableInventoryAsync(int s, int t, string itemname) {
            return base.Channel.GetConsumableInventoryAsync(s, t, itemname);
        }
        
        public int GetConsumableInventoryCount(string item) {
            return base.Channel.GetConsumableInventoryCount(item);
        }
        
        public System.Threading.Tasks.Task<int> GetConsumableInventoryCountAsync(string item) {
            return base.Channel.GetConsumableInventoryCountAsync(item);
        }
        
        public PMSClient.ConsumableService.DcConsumableInventory[] GetConsumableInventoryWarning() {
            return base.Channel.GetConsumableInventoryWarning();
        }
        
        public System.Threading.Tasks.Task<PMSClient.ConsumableService.DcConsumableInventory[]> GetConsumableInventoryWarningAsync() {
            return base.Channel.GetConsumableInventoryWarningAsync();
        }
    }
}
