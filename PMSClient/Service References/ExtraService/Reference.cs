//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.ExtraService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcItemDebit", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcItemDebit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creditor {
            get {
                return this.CreditorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorField, value) != true)) {
                    this.CreditorField = value;
                    this.RaisePropertyChanged("Creditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLot {
            get {
                return this.ItemLotField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLotField, value) != true)) {
                    this.ItemLotField = value;
                    this.RaisePropertyChanged("ItemLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemProperty {
            get {
                return this.ItemPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPropertyField, value) != true)) {
                    this.ItemPropertyField = value;
                    this.RaisePropertyChanged("ItemProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeField, value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((this.RemarkField.Equals(value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcCheckList", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcCheckList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Updator {
            get {
                return this.UpdatorField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatorField, value) != true)) {
                    this.UpdatorField = value;
                    this.RaisePropertyChanged("Updator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcFeedBack", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcFeedBack : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeebackReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeebackReason {
            get {
                return this.FeebackReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FeebackReasonField, value) != true)) {
                    this.FeebackReasonField = value;
                    this.RaisePropertyChanged("FeebackReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessWay {
            get {
                return this.ProcessWayField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessWayField, value) != true)) {
                    this.ProcessWayField = value;
                    this.RaisePropertyChanged("ProcessWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDateField, value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExtraService.IItemDebitService")]
    public interface IItemDebitService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/GetItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/GetItemDebitResponse")]
        PMSClient.ExtraService.DcItemDebit[] GetItemDebit(int s, int t, string itemType, string itemName, string creaditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/GetItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/GetItemDebitResponse")]
        System.Threading.Tasks.Task<PMSClient.ExtraService.DcItemDebit[]> GetItemDebitAsync(int s, int t, string itemType, string itemName, string creaditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/GetItemDebitCount", ReplyAction="http://tempuri.org/IItemDebitService/GetItemDebitCountResponse")]
        int GetItemDebitCount(string itemType, string itemName, string creaditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/GetItemDebitCount", ReplyAction="http://tempuri.org/IItemDebitService/GetItemDebitCountResponse")]
        System.Threading.Tasks.Task<int> GetItemDebitCountAsync(string itemType, string itemName, string creaditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/AddItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/AddItemDebitResponse")]
        int AddItemDebit(PMSClient.ExtraService.DcItemDebit model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/AddItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/AddItemDebitResponse")]
        System.Threading.Tasks.Task<int> AddItemDebitAsync(PMSClient.ExtraService.DcItemDebit model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/UpdateItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/UpdateItemDebitResponse")]
        int UpdateItemDebit(PMSClient.ExtraService.DcItemDebit model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/UpdateItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/UpdateItemDebitResponse")]
        System.Threading.Tasks.Task<int> UpdateItemDebitAsync(PMSClient.ExtraService.DcItemDebit model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/DeleteItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/DeleteItemDebitResponse")]
        int DeleteItemDebit(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemDebitService/DeleteItemDebit", ReplyAction="http://tempuri.org/IItemDebitService/DeleteItemDebitResponse")]
        System.Threading.Tasks.Task<int> DeleteItemDebitAsync(System.Guid id, string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IItemDebitServiceChannel : PMSClient.ExtraService.IItemDebitService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemDebitServiceClient : System.ServiceModel.ClientBase<PMSClient.ExtraService.IItemDebitService>, PMSClient.ExtraService.IItemDebitService {
        
        public ItemDebitServiceClient() {
        }
        
        public ItemDebitServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItemDebitServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemDebitServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemDebitServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.ExtraService.DcItemDebit[] GetItemDebit(int s, int t, string itemType, string itemName, string creaditor) {
            return base.Channel.GetItemDebit(s, t, itemType, itemName, creaditor);
        }
        
        public System.Threading.Tasks.Task<PMSClient.ExtraService.DcItemDebit[]> GetItemDebitAsync(int s, int t, string itemType, string itemName, string creaditor) {
            return base.Channel.GetItemDebitAsync(s, t, itemType, itemName, creaditor);
        }
        
        public int GetItemDebitCount(string itemType, string itemName, string creaditor) {
            return base.Channel.GetItemDebitCount(itemType, itemName, creaditor);
        }
        
        public System.Threading.Tasks.Task<int> GetItemDebitCountAsync(string itemType, string itemName, string creaditor) {
            return base.Channel.GetItemDebitCountAsync(itemType, itemName, creaditor);
        }
        
        public int AddItemDebit(PMSClient.ExtraService.DcItemDebit model, string uid) {
            return base.Channel.AddItemDebit(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> AddItemDebitAsync(PMSClient.ExtraService.DcItemDebit model, string uid) {
            return base.Channel.AddItemDebitAsync(model, uid);
        }
        
        public int UpdateItemDebit(PMSClient.ExtraService.DcItemDebit model, string uid) {
            return base.Channel.UpdateItemDebit(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateItemDebitAsync(PMSClient.ExtraService.DcItemDebit model, string uid) {
            return base.Channel.UpdateItemDebitAsync(model, uid);
        }
        
        public int DeleteItemDebit(System.Guid id, string uid) {
            return base.Channel.DeleteItemDebit(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteItemDebitAsync(System.Guid id, string uid) {
            return base.Channel.DeleteItemDebitAsync(id, uid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExtraService.ICheckListService")]
    public interface ICheckListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/GetCheckList", ReplyAction="http://tempuri.org/ICheckListService/GetCheckListResponse")]
        PMSClient.ExtraService.DcCheckList[] GetCheckList(int s, int t, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/GetCheckList", ReplyAction="http://tempuri.org/ICheckListService/GetCheckListResponse")]
        System.Threading.Tasks.Task<PMSClient.ExtraService.DcCheckList[]> GetCheckListAsync(int s, int t, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/GetCheckListCount", ReplyAction="http://tempuri.org/ICheckListService/GetCheckListCountResponse")]
        int GetCheckListCount(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/GetCheckListCount", ReplyAction="http://tempuri.org/ICheckListService/GetCheckListCountResponse")]
        System.Threading.Tasks.Task<int> GetCheckListCountAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/AddCheckList", ReplyAction="http://tempuri.org/ICheckListService/AddCheckListResponse")]
        int AddCheckList(PMSClient.ExtraService.DcCheckList model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/AddCheckList", ReplyAction="http://tempuri.org/ICheckListService/AddCheckListResponse")]
        System.Threading.Tasks.Task<int> AddCheckListAsync(PMSClient.ExtraService.DcCheckList model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/UpdateCheckList", ReplyAction="http://tempuri.org/ICheckListService/UpdateCheckListResponse")]
        int UpdateCheckList(PMSClient.ExtraService.DcCheckList model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/UpdateCheckList", ReplyAction="http://tempuri.org/ICheckListService/UpdateCheckListResponse")]
        System.Threading.Tasks.Task<int> UpdateCheckListAsync(PMSClient.ExtraService.DcCheckList model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/DeleteCheckList", ReplyAction="http://tempuri.org/ICheckListService/DeleteCheckListResponse")]
        int DeleteCheckList(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckListService/DeleteCheckList", ReplyAction="http://tempuri.org/ICheckListService/DeleteCheckListResponse")]
        System.Threading.Tasks.Task<int> DeleteCheckListAsync(System.Guid id, string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICheckListServiceChannel : PMSClient.ExtraService.ICheckListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckListServiceClient : System.ServiceModel.ClientBase<PMSClient.ExtraService.ICheckListService>, PMSClient.ExtraService.ICheckListService {
        
        public CheckListServiceClient() {
        }
        
        public CheckListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.ExtraService.DcCheckList[] GetCheckList(int s, int t, string title) {
            return base.Channel.GetCheckList(s, t, title);
        }
        
        public System.Threading.Tasks.Task<PMSClient.ExtraService.DcCheckList[]> GetCheckListAsync(int s, int t, string title) {
            return base.Channel.GetCheckListAsync(s, t, title);
        }
        
        public int GetCheckListCount(string title) {
            return base.Channel.GetCheckListCount(title);
        }
        
        public System.Threading.Tasks.Task<int> GetCheckListCountAsync(string title) {
            return base.Channel.GetCheckListCountAsync(title);
        }
        
        public int AddCheckList(PMSClient.ExtraService.DcCheckList model, string uid) {
            return base.Channel.AddCheckList(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> AddCheckListAsync(PMSClient.ExtraService.DcCheckList model, string uid) {
            return base.Channel.AddCheckListAsync(model, uid);
        }
        
        public int UpdateCheckList(PMSClient.ExtraService.DcCheckList model, string uid) {
            return base.Channel.UpdateCheckList(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCheckListAsync(PMSClient.ExtraService.DcCheckList model, string uid) {
            return base.Channel.UpdateCheckListAsync(model, uid);
        }
        
        public int DeleteCheckList(System.Guid id, string uid) {
            return base.Channel.DeleteCheckList(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCheckListAsync(System.Guid id, string uid) {
            return base.Channel.DeleteCheckListAsync(id, uid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExtraService.IFeedBackService")]
    public interface IFeedBackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/GetFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/GetFeedBackResponse")]
        PMSClient.ExtraService.DcFeedBack[] GetFeedBack(int s, int t, string productId, string composition, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/GetFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/GetFeedBackResponse")]
        System.Threading.Tasks.Task<PMSClient.ExtraService.DcFeedBack[]> GetFeedBackAsync(int s, int t, string productId, string composition, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/GetFeedBackCount", ReplyAction="http://tempuri.org/IFeedBackService/GetFeedBackCountResponse")]
        int GetFeedBackCount(string productId, string composition, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/GetFeedBackCount", ReplyAction="http://tempuri.org/IFeedBackService/GetFeedBackCountResponse")]
        System.Threading.Tasks.Task<int> GetFeedBackCountAsync(string productId, string composition, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/AddFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/AddFeedBackResponse")]
        int AddFeedBack(PMSClient.ExtraService.DcFeedBack model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/AddFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/AddFeedBackResponse")]
        System.Threading.Tasks.Task<int> AddFeedBackAsync(PMSClient.ExtraService.DcFeedBack model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/UpdateFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/UpdateFeedBackResponse")]
        int UpdateFeedBack(PMSClient.ExtraService.DcFeedBack model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/UpdateFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/UpdateFeedBackResponse")]
        System.Threading.Tasks.Task<int> UpdateFeedBackAsync(PMSClient.ExtraService.DcFeedBack model, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/DeleteFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/DeleteFeedBackResponse")]
        int DeleteFeedBack(System.Guid id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedBackService/DeleteFeedBack", ReplyAction="http://tempuri.org/IFeedBackService/DeleteFeedBackResponse")]
        System.Threading.Tasks.Task<int> DeleteFeedBackAsync(System.Guid id, string uid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedBackServiceChannel : PMSClient.ExtraService.IFeedBackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedBackServiceClient : System.ServiceModel.ClientBase<PMSClient.ExtraService.IFeedBackService>, PMSClient.ExtraService.IFeedBackService {
        
        public FeedBackServiceClient() {
        }
        
        public FeedBackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedBackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedBackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedBackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.ExtraService.DcFeedBack[] GetFeedBack(int s, int t, string productId, string composition, string customer) {
            return base.Channel.GetFeedBack(s, t, productId, composition, customer);
        }
        
        public System.Threading.Tasks.Task<PMSClient.ExtraService.DcFeedBack[]> GetFeedBackAsync(int s, int t, string productId, string composition, string customer) {
            return base.Channel.GetFeedBackAsync(s, t, productId, composition, customer);
        }
        
        public int GetFeedBackCount(string productId, string composition, string customer) {
            return base.Channel.GetFeedBackCount(productId, composition, customer);
        }
        
        public System.Threading.Tasks.Task<int> GetFeedBackCountAsync(string productId, string composition, string customer) {
            return base.Channel.GetFeedBackCountAsync(productId, composition, customer);
        }
        
        public int AddFeedBack(PMSClient.ExtraService.DcFeedBack model, string uid) {
            return base.Channel.AddFeedBack(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> AddFeedBackAsync(PMSClient.ExtraService.DcFeedBack model, string uid) {
            return base.Channel.AddFeedBackAsync(model, uid);
        }
        
        public int UpdateFeedBack(PMSClient.ExtraService.DcFeedBack model, string uid) {
            return base.Channel.UpdateFeedBack(model, uid);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFeedBackAsync(PMSClient.ExtraService.DcFeedBack model, string uid) {
            return base.Channel.UpdateFeedBackAsync(model, uid);
        }
        
        public int DeleteFeedBack(System.Guid id, string uid) {
            return base.Channel.DeleteFeedBack(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFeedBackAsync(System.Guid id, string uid) {
            return base.Channel.DeleteFeedBackAsync(id, uid);
        }
    }
}
