//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.NewService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaterialIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProductionIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleForAnlysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondMachineDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondMachineDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WithBackingPlateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionAbbr {
            get {
                return this.CompositionAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionAbbrField, value) != true)) {
                    this.CompositionAbbrField = value;
                    this.RaisePropertyChanged("CompositionAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drawing {
            get {
                return this.DrawingField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawingField, value) != true)) {
                    this.DrawingField = value;
                    this.RaisePropertyChanged("Drawing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((this.LastUpdateTimeField.Equals(value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaterialIndex {
            get {
                return this.MaterialIndexField;
            }
            set {
                if ((this.MaterialIndexField.Equals(value) != true)) {
                    this.MaterialIndexField = value;
                    this.RaisePropertyChanged("MaterialIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProductionIndex {
            get {
                return this.ProductionIndexField;
            }
            set {
                if ((this.ProductionIndexField.Equals(value) != true)) {
                    this.ProductionIndexField = value;
                    this.RaisePropertyChanged("ProductionIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewTime {
            get {
                return this.ReviewTimeField;
            }
            set {
                if ((this.ReviewTimeField.Equals(value) != true)) {
                    this.ReviewTimeField = value;
                    this.RaisePropertyChanged("ReviewTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleForAnlysis {
            get {
                return this.SampleForAnlysisField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleForAnlysisField, value) != true)) {
                    this.SampleForAnlysisField = value;
                    this.RaisePropertyChanged("SampleForAnlysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondMachineDetails {
            get {
                return this.SecondMachineDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondMachineDetailsField, value) != true)) {
                    this.SecondMachineDetailsField = value;
                    this.RaisePropertyChanged("SecondMachineDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondMachineDimension {
            get {
                return this.SecondMachineDimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondMachineDimensionField, value) != true)) {
                    this.SecondMachineDimensionField = value;
                    this.RaisePropertyChanged("SecondMachineDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipTo {
            get {
                return this.ShipToField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToField, value) != true)) {
                    this.ShipToField = value;
                    this.RaisePropertyChanged("ShipTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateRemark {
            get {
                return this.StateRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StateRemarkField, value) != true)) {
                    this.StateRemarkField = value;
                    this.RaisePropertyChanged("StateRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WithBackingPlate {
            get {
                return this.WithBackingPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.WithBackingPlateField, value) != true)) {
                    this.WithBackingPlateField = value;
                    this.RaisePropertyChanged("WithBackingPlate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewService.INewService")]
    public interface INewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrder", ReplyAction="http://tempuri.org/INewService/GetOrderResponse")]
        PMSClient.NewService.DcOrder[] GetOrder(int s, int t, string customer, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrder", ReplyAction="http://tempuri.org/INewService/GetOrderResponse")]
        System.Threading.Tasks.Task<PMSClient.NewService.DcOrder[]> GetOrderAsync(int s, int t, string customer, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderCount", ReplyAction="http://tempuri.org/INewService/GetOrderCountResponse")]
        int GetOrderCount(string customer, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderCount", ReplyAction="http://tempuri.org/INewService/GetOrderCountResponse")]
        System.Threading.Tasks.Task<int> GetOrderCountAsync(string customer, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderLastUpdateTime", ReplyAction="http://tempuri.org/INewService/GetOrderLastUpdateTimeResponse")]
        System.DateTime GetOrderLastUpdateTime(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderLastUpdateTime", ReplyAction="http://tempuri.org/INewService/GetOrderLastUpdateTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetOrderLastUpdateTimeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderByID", ReplyAction="http://tempuri.org/INewService/GetOrderByIDResponse")]
        PMSClient.NewService.DcOrder GetOrderByID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetOrderByID", ReplyAction="http://tempuri.org/INewService/GetOrderByIDResponse")]
        System.Threading.Tasks.Task<PMSClient.NewService.DcOrder> GetOrderByIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/UpdateOrder", ReplyAction="http://tempuri.org/INewService/UpdateOrderResponse")]
        void UpdateOrder(PMSClient.NewService.DcOrder model, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/UpdateOrder", ReplyAction="http://tempuri.org/INewService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(PMSClient.NewService.DcOrder model, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetMisson", ReplyAction="http://tempuri.org/INewService/GetMissonResponse")]
        PMSClient.NewService.DcOrder[] GetMisson(int s, int t, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetMisson", ReplyAction="http://tempuri.org/INewService/GetMissonResponse")]
        System.Threading.Tasks.Task<PMSClient.NewService.DcOrder[]> GetMissonAsync(int s, int t, string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetMissonCount", ReplyAction="http://tempuri.org/INewService/GetMissonCountResponse")]
        int GetMissonCount(string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetMissonCount", ReplyAction="http://tempuri.org/INewService/GetMissonCountResponse")]
        System.Threading.Tasks.Task<int> GetMissonCountAsync(string composition, string pminumber, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetRecordTestLastUpdateTime", ReplyAction="http://tempuri.org/INewService/GetRecordTestLastUpdateTimeResponse")]
        System.DateTime GetRecordTestLastUpdateTime(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewService/GetRecordTestLastUpdateTime", ReplyAction="http://tempuri.org/INewService/GetRecordTestLastUpdateTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetRecordTestLastUpdateTimeAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewServiceChannel : PMSClient.NewService.INewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewServiceClient : System.ServiceModel.ClientBase<PMSClient.NewService.INewService>, PMSClient.NewService.INewService {
        
        public NewServiceClient() {
        }
        
        public NewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.NewService.DcOrder[] GetOrder(int s, int t, string customer, string composition, string pminumber, string state) {
            return base.Channel.GetOrder(s, t, customer, composition, pminumber, state);
        }
        
        public System.Threading.Tasks.Task<PMSClient.NewService.DcOrder[]> GetOrderAsync(int s, int t, string customer, string composition, string pminumber, string state) {
            return base.Channel.GetOrderAsync(s, t, customer, composition, pminumber, state);
        }
        
        public int GetOrderCount(string customer, string composition, string pminumber, string state) {
            return base.Channel.GetOrderCount(customer, composition, pminumber, state);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderCountAsync(string customer, string composition, string pminumber, string state) {
            return base.Channel.GetOrderCountAsync(customer, composition, pminumber, state);
        }
        
        public System.DateTime GetOrderLastUpdateTime(System.Guid id) {
            return base.Channel.GetOrderLastUpdateTime(id);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetOrderLastUpdateTimeAsync(System.Guid id) {
            return base.Channel.GetOrderLastUpdateTimeAsync(id);
        }
        
        public PMSClient.NewService.DcOrder GetOrderByID(System.Guid id) {
            return base.Channel.GetOrderByID(id);
        }
        
        public System.Threading.Tasks.Task<PMSClient.NewService.DcOrder> GetOrderByIDAsync(System.Guid id) {
            return base.Channel.GetOrderByIDAsync(id);
        }
        
        public void UpdateOrder(PMSClient.NewService.DcOrder model, string user) {
            base.Channel.UpdateOrder(model, user);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(PMSClient.NewService.DcOrder model, string user) {
            return base.Channel.UpdateOrderAsync(model, user);
        }
        
        public PMSClient.NewService.DcOrder[] GetMisson(int s, int t, string composition, string pminumber, string state) {
            return base.Channel.GetMisson(s, t, composition, pminumber, state);
        }
        
        public System.Threading.Tasks.Task<PMSClient.NewService.DcOrder[]> GetMissonAsync(int s, int t, string composition, string pminumber, string state) {
            return base.Channel.GetMissonAsync(s, t, composition, pminumber, state);
        }
        
        public int GetMissonCount(string composition, string pminumber, string state) {
            return base.Channel.GetMissonCount(composition, pminumber, state);
        }
        
        public System.Threading.Tasks.Task<int> GetMissonCountAsync(string composition, string pminumber, string state) {
            return base.Channel.GetMissonCountAsync(composition, pminumber, state);
        }
        
        public System.DateTime GetRecordTestLastUpdateTime(System.Guid id) {
            return base.Channel.GetRecordTestLastUpdateTime(id);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetRecordTestLastUpdateTimeAsync(System.Guid id) {
            return base.Channel.GetRecordTestLastUpdateTimeAsync(id);
        }
    }
}
