//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.AnlysisService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcPlanTrace", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcPlanTrace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordBondingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordDeMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordFailureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordMachineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStd {
            get {
                return this.CompositionStdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStdField, value) != true)) {
                    this.CompositionStdField = value;
                    this.RaisePropertyChanged("CompositionStd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanType {
            get {
                return this.PlanTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanTypeField, value) != true)) {
                    this.PlanTypeField = value;
                    this.RaisePropertyChanged("PlanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordBonding {
            get {
                return this.RecordBondingField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordBondingField, value) != true)) {
                    this.RecordBondingField = value;
                    this.RaisePropertyChanged("RecordBonding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordDeMold {
            get {
                return this.RecordDeMoldField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordDeMoldField, value) != true)) {
                    this.RecordDeMoldField = value;
                    this.RaisePropertyChanged("RecordDeMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordDelivery {
            get {
                return this.RecordDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordDeliveryField, value) != true)) {
                    this.RecordDeliveryField = value;
                    this.RaisePropertyChanged("RecordDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordFailure {
            get {
                return this.RecordFailureField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordFailureField, value) != true)) {
                    this.RecordFailureField = value;
                    this.RaisePropertyChanged("RecordFailure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordMachine {
            get {
                return this.RecordMachineField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordMachineField, value) != true)) {
                    this.RecordMachineField = value;
                    this.RaisePropertyChanged("RecordMachine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordTest {
            get {
                return this.RecordTestField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTestField, value) != true)) {
                    this.RecordTestField = value;
                    this.RaisePropertyChanged("RecordTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchCode {
            get {
                return this.SearchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchCodeField, value) != true)) {
                    this.SearchCodeField = value;
                    this.RaisePropertyChanged("SearchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcAnlysis", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcAnlysis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcAnlysisCustomer", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcAnlysisCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TargetQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderCount {
            get {
                return this.OrderCountField;
            }
            set {
                if ((this.OrderCountField.Equals(value) != true)) {
                    this.OrderCountField = value;
                    this.RaisePropertyChanged("OrderCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TargetQuantity {
            get {
                return this.TargetQuantityField;
            }
            set {
                if ((this.TargetQuantityField.Equals(value) != true)) {
                    this.TargetQuantityField = value;
                    this.RaisePropertyChanged("TargetQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnlysisService.IAnlysisService")]
    public interface IAnlysisService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetPlanTrace", ReplyAction="http://tempuri.org/IAnlysisService/GetPlanTraceResponse")]
        PMSClient.AnlysisService.DcPlanTrace[] GetPlanTrace(int s, int t, string searchCode, string composition, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetPlanTrace", ReplyAction="http://tempuri.org/IAnlysisService/GetPlanTraceResponse")]
        System.Threading.Tasks.Task<PMSClient.AnlysisService.DcPlanTrace[]> GetPlanTraceAsync(int s, int t, string searchCode, string composition, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetPlanTraceCount", ReplyAction="http://tempuri.org/IAnlysisService/GetPlanTraceCountResponse")]
        int GetPlanTraceCount(string searchCode, string composition, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetPlanTraceCount", ReplyAction="http://tempuri.org/IAnlysisService/GetPlanTraceCountResponse")]
        System.Threading.Tasks.Task<int> GetPlanTraceCountAsync(string searchCode, string composition, string pminumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetStatistic", ReplyAction="http://tempuri.org/IAnlysisService/GetStatisticResponse")]
        PMSClient.AnlysisService.DcAnlysis[] GetStatistic(int year_start, int month_start, int year_end, int month_end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetStatistic", ReplyAction="http://tempuri.org/IAnlysisService/GetStatisticResponse")]
        System.Threading.Tasks.Task<PMSClient.AnlysisService.DcAnlysis[]> GetStatisticAsync(int year_start, int month_start, int year_end, int month_end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetStatisticCustomer", ReplyAction="http://tempuri.org/IAnlysisService/GetStatisticCustomerResponse")]
        PMSClient.AnlysisService.DcAnlysisCustomer[] GetStatisticCustomer(int year_start, int month_start, int year_end, int month_end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnlysisService/GetStatisticCustomer", ReplyAction="http://tempuri.org/IAnlysisService/GetStatisticCustomerResponse")]
        System.Threading.Tasks.Task<PMSClient.AnlysisService.DcAnlysisCustomer[]> GetStatisticCustomerAsync(int year_start, int month_start, int year_end, int month_end);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnlysisServiceChannel : PMSClient.AnlysisService.IAnlysisService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnlysisServiceClient : System.ServiceModel.ClientBase<PMSClient.AnlysisService.IAnlysisService>, PMSClient.AnlysisService.IAnlysisService {
        
        public AnlysisServiceClient() {
        }
        
        public AnlysisServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnlysisServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnlysisServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnlysisServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClient.AnlysisService.DcPlanTrace[] GetPlanTrace(int s, int t, string searchCode, string composition, string pminumber) {
            return base.Channel.GetPlanTrace(s, t, searchCode, composition, pminumber);
        }
        
        public System.Threading.Tasks.Task<PMSClient.AnlysisService.DcPlanTrace[]> GetPlanTraceAsync(int s, int t, string searchCode, string composition, string pminumber) {
            return base.Channel.GetPlanTraceAsync(s, t, searchCode, composition, pminumber);
        }
        
        public int GetPlanTraceCount(string searchCode, string composition, string pminumber) {
            return base.Channel.GetPlanTraceCount(searchCode, composition, pminumber);
        }
        
        public System.Threading.Tasks.Task<int> GetPlanTraceCountAsync(string searchCode, string composition, string pminumber) {
            return base.Channel.GetPlanTraceCountAsync(searchCode, composition, pminumber);
        }
        
        public PMSClient.AnlysisService.DcAnlysis[] GetStatistic(int year_start, int month_start, int year_end, int month_end) {
            return base.Channel.GetStatistic(year_start, month_start, year_end, month_end);
        }
        
        public System.Threading.Tasks.Task<PMSClient.AnlysisService.DcAnlysis[]> GetStatisticAsync(int year_start, int month_start, int year_end, int month_end) {
            return base.Channel.GetStatisticAsync(year_start, month_start, year_end, month_end);
        }
        
        public PMSClient.AnlysisService.DcAnlysisCustomer[] GetStatisticCustomer(int year_start, int month_start, int year_end, int month_end) {
            return base.Channel.GetStatisticCustomer(year_start, month_start, year_end, month_end);
        }
        
        public System.Threading.Tasks.Task<PMSClient.AnlysisService.DcAnlysisCustomer[]> GetStatisticCustomerAsync(int year_start, int month_start, int year_end, int month_end) {
            return base.Channel.GetStatisticCustomerAsync(year_start, month_start, year_end, month_end);
        }
    }
}
