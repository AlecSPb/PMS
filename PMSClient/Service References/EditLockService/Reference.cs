//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClient.EditLockService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcEditLock", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcEditLock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerInfo {
            get {
                return this.ComputerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerInfoField, value) != true)) {
                    this.ComputerInfoField = value;
                    this.RaisePropertyChanged("ComputerInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FingerPrint {
            get {
                return this.FingerPrintField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerPrintField, value) != true)) {
                    this.FingerPrintField = value;
                    this.RaisePropertyChanged("FingerPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockTime {
            get {
                return this.LockTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LockTimeField, value) != true)) {
                    this.LockTimeField = value;
                    this.RaisePropertyChanged("LockTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EditLockService.IEditLockService")]
    public interface IEditLockService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/Lock", ReplyAction="http://tempuri.org/IEditLockService/LockResponse")]
        void Lock(PMSClient.EditLockService.DcEditLock model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/Lock", ReplyAction="http://tempuri.org/IEditLockService/LockResponse")]
        System.Threading.Tasks.Task LockAsync(PMSClient.EditLockService.DcEditLock model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLock", ReplyAction="http://tempuri.org/IEditLockService/UnLockResponse")]
        void UnLock(string fingerprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLock", ReplyAction="http://tempuri.org/IEditLockService/UnLockResponse")]
        System.Threading.Tasks.Task UnLockAsync(string fingerprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLockAll", ReplyAction="http://tempuri.org/IEditLockService/UnLockAllResponse")]
        void UnLockAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLockAll", ReplyAction="http://tempuri.org/IEditLockService/UnLockAllResponse")]
        System.Threading.Tasks.Task UnLockAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLockByLocker", ReplyAction="http://tempuri.org/IEditLockService/UnLockByLockerResponse")]
        void UnLockByLocker(string locker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/UnLockByLocker", ReplyAction="http://tempuri.org/IEditLockService/UnLockByLockerResponse")]
        System.Threading.Tasks.Task UnLockByLockerAsync(string locker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/CheckLock", ReplyAction="http://tempuri.org/IEditLockService/CheckLockResponse")]
        PMSClient.EditLockService.DcEditLock CheckLock(string fingerprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditLockService/CheckLock", ReplyAction="http://tempuri.org/IEditLockService/CheckLockResponse")]
        System.Threading.Tasks.Task<PMSClient.EditLockService.DcEditLock> CheckLockAsync(string fingerprint);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEditLockServiceChannel : PMSClient.EditLockService.IEditLockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditLockServiceClient : System.ServiceModel.ClientBase<PMSClient.EditLockService.IEditLockService>, PMSClient.EditLockService.IEditLockService {
        
        public EditLockServiceClient() {
        }
        
        public EditLockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EditLockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditLockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditLockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Lock(PMSClient.EditLockService.DcEditLock model) {
            base.Channel.Lock(model);
        }
        
        public System.Threading.Tasks.Task LockAsync(PMSClient.EditLockService.DcEditLock model) {
            return base.Channel.LockAsync(model);
        }
        
        public void UnLock(string fingerprint) {
            base.Channel.UnLock(fingerprint);
        }
        
        public System.Threading.Tasks.Task UnLockAsync(string fingerprint) {
            return base.Channel.UnLockAsync(fingerprint);
        }
        
        public void UnLockAll() {
            base.Channel.UnLockAll();
        }
        
        public System.Threading.Tasks.Task UnLockAllAsync() {
            return base.Channel.UnLockAllAsync();
        }
        
        public void UnLockByLocker(string locker) {
            base.Channel.UnLockByLocker(locker);
        }
        
        public System.Threading.Tasks.Task UnLockByLockerAsync(string locker) {
            return base.Channel.UnLockByLockerAsync(locker);
        }
        
        public PMSClient.EditLockService.DcEditLock CheckLock(string fingerprint) {
            return base.Channel.CheckLock(fingerprint);
        }
        
        public System.Threading.Tasks.Task<PMSClient.EditLockService.DcEditLock> CheckLockAsync(string fingerprint) {
            return base.Channel.CheckLockAsync(fingerprint);
        }
    }
}
