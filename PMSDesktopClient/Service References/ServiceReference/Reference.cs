//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSDesktopClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositoinAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PolicyMakeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReviewPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateRemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositoinAbbr {
            get {
                return this.CompositoinAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositoinAbbrField, value) != true)) {
                    this.CompositoinAbbrField = value;
                    this.RaisePropertyChanged("CompositoinAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyContent {
            get {
                return this.PolicyContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyContentField, value) != true)) {
                    this.PolicyContentField = value;
                    this.RaisePropertyChanged("PolicyContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PolicyMakeDate {
            get {
                return this.PolicyMakeDateField;
            }
            set {
                if ((this.PolicyMakeDateField.Equals(value) != true)) {
                    this.PolicyMakeDateField = value;
                    this.RaisePropertyChanged("PolicyMakeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMaker {
            get {
                return this.PolicyMakerField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyMakerField, value) != true)) {
                    this.PolicyMakerField = value;
                    this.RaisePropertyChanged("PolicyMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewDate {
            get {
                return this.ReviewDateField;
            }
            set {
                if ((this.ReviewDateField.Equals(value) != true)) {
                    this.ReviewDateField = value;
                    this.RaisePropertyChanged("ReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReviewPassed {
            get {
                return this.ReviewPassedField;
            }
            set {
                if ((this.ReviewPassedField.Equals(value) != true)) {
                    this.ReviewPassedField = value;
                    this.RaisePropertyChanged("ReviewPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateRemark {
            get {
                return this.StateRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StateRemarkField, value) != true)) {
                    this.StateRemarkField = value;
                    this.RaisePropertyChanged("StateRemark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        PMSDesktopClient.ServiceReference.DcOrder[] GetAllOrderInPage(int skip, int take, int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetAllOrderInPageAsync(int skip, int take, int state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcOrder[] GetOrderBySearchInPage(int skip, int take, int state, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, int state, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        int GetOrderCountBySearch(int state, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(int state, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        int AddOrder(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        int UpdateOrder(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        int DeleteOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : PMSDesktopClient.ServiceReference.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IOrderService>, PMSDesktopClient.ServiceReference.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcOrder[] GetAllOrderInPage(int skip, int take, int state) {
            return base.Channel.GetAllOrderInPage(skip, take, state);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetAllOrderInPageAsync(int skip, int take, int state) {
            return base.Channel.GetAllOrderInPageAsync(skip, take, state);
        }
        
        public PMSDesktopClient.ServiceReference.DcOrder[] GetOrderBySearchInPage(int skip, int take, int state, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPage(skip, take, state, customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, int state, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPageAsync(skip, take, state, customer, compositionstd);
        }
        
        public int GetOrderCountBySearch(int state, string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearch(state, customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(int state, string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearchAsync(state, customer, compositionstd);
        }
        
        public int AddOrder(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public int UpdateOrder(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public int DeleteOrder(System.Guid id) {
            return base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id) {
            return base.Channel.DeleteOrderAsync(id);
        }
    }
}
