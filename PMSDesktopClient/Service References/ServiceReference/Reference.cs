//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSDesktopClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositoinAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PolicyMakeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReviewPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateRemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositoinAbbr {
            get {
                return this.CompositoinAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositoinAbbrField, value) != true)) {
                    this.CompositoinAbbrField = value;
                    this.RaisePropertyChanged("CompositoinAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyContent {
            get {
                return this.PolicyContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyContentField, value) != true)) {
                    this.PolicyContentField = value;
                    this.RaisePropertyChanged("PolicyContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PolicyMakeDate {
            get {
                return this.PolicyMakeDateField;
            }
            set {
                if ((this.PolicyMakeDateField.Equals(value) != true)) {
                    this.PolicyMakeDateField = value;
                    this.RaisePropertyChanged("PolicyMakeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMaker {
            get {
                return this.PolicyMakerField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyMakerField, value) != true)) {
                    this.PolicyMakerField = value;
                    this.RaisePropertyChanged("PolicyMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewDate {
            get {
                return this.ReviewDateField;
            }
            set {
                if ((this.ReviewDateField.Equals(value) != true)) {
                    this.ReviewDateField = value;
                    this.RaisePropertyChanged("ReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReviewPassed {
            get {
                return this.ReviewPassedField;
            }
            set {
                if ((this.ReviewPassedField.Equals(value) != true)) {
                    this.ReviewPassedField = value;
                    this.RaisePropertyChanged("ReviewPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateRemark {
            get {
                return this.StateRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StateRemarkField, value) != true)) {
                    this.StateRemarkField = value;
                    this.RaisePropertyChanged("StateRemark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcPlanVHP", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcPlanVHP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CalculationDensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrainSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PowderWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RoomHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RoomTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CalculationDensity {
            get {
                return this.CalculationDensityField;
            }
            set {
                if ((this.CalculationDensityField.Equals(value) != true)) {
                    this.CalculationDensityField = value;
                    this.RaisePropertyChanged("CalculationDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentMold {
            get {
                return this.CurrentMoldField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentMoldField, value) != true)) {
                    this.CurrentMoldField = value;
                    this.RaisePropertyChanged("CurrentMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FillingRequirement {
            get {
                return this.FillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.FillingRequirementField, value) != true)) {
                    this.FillingRequirementField = value;
                    this.RaisePropertyChanged("FillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrainSize {
            get {
                return this.GrainSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GrainSizeField, value) != true)) {
                    this.GrainSizeField = value;
                    this.RaisePropertyChanged("GrainSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineRequirement {
            get {
                return this.MachineRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineRequirementField, value) != true)) {
                    this.MachineRequirementField = value;
                    this.RaisePropertyChanged("MachineRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MillingRequirement {
            get {
                return this.MillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MillingRequirementField, value) != true)) {
                    this.MillingRequirementField = value;
                    this.RaisePropertyChanged("MillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PowderWeight {
            get {
                return this.PowderWeightField;
            }
            set {
                if ((this.PowderWeightField.Equals(value) != true)) {
                    this.PowderWeightField = value;
                    this.RaisePropertyChanged("PowderWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCode {
            get {
                return this.ProcessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCodeField, value) != true)) {
                    this.ProcessCodeField = value;
                    this.RaisePropertyChanged("ProcessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RoomHumidity {
            get {
                return this.RoomHumidityField;
            }
            set {
                if ((this.RoomHumidityField.Equals(value) != true)) {
                    this.RoomHumidityField = value;
                    this.RaisePropertyChanged("RoomHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RoomTemperature {
            get {
                return this.RoomTemperatureField;
            }
            set {
                if ((this.RoomTemperatureField.Equals(value) != true)) {
                    this.RoomTemperatureField = value;
                    this.RaisePropertyChanged("RoomTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPRequirement {
            get {
                return this.VHPRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPRequirementField, value) != true)) {
                    this.VHPRequirementField = value;
                    this.RaisePropertyChanged("VHPRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialNeed", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialNeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialNeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialNeeds {
            get {
                return this.SpecialNeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialNeedsField, value) != true)) {
                    this.SpecialNeedsField = value;
                    this.RaisePropertyChanged("SpecialNeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSDesktopClient.ServiceReference.DcMaterialOrderItem[] MaterialOrderItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShipFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierReceiverField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSDesktopClient.ServiceReference.DcMaterialOrderItem[] MaterialOrderItems {
            get {
                return this.MaterialOrderItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialOrderItemsField, value) != true)) {
                    this.MaterialOrderItemsField = value;
                    this.RaisePropertyChanged("MaterialOrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPO {
            get {
                return this.OrderPOField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPOField, value) != true)) {
                    this.OrderPOField = value;
                    this.RaisePropertyChanged("OrderPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShipFee {
            get {
                return this.ShipFeeField;
            }
            set {
                if ((this.ShipFeeField.Equals(value) != true)) {
                    this.ShipFeeField = value;
                    this.RaisePropertyChanged("ShipFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAbbr {
            get {
                return this.SupplierAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAbbrField, value) != true)) {
                    this.SupplierAbbrField = value;
                    this.RaisePropertyChanged("SupplierAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAddress {
            get {
                return this.SupplierAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAddressField, value) != true)) {
                    this.SupplierAddressField = value;
                    this.RaisePropertyChanged("SupplierAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierEmail {
            get {
                return this.SupplierEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierEmailField, value) != true)) {
                    this.SupplierEmailField = value;
                    this.RaisePropertyChanged("SupplierEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierReceiver {
            get {
                return this.SupplierReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierReceiverField, value) != true)) {
                    this.SupplierReceiverField = value;
                    this.RaisePropertyChanged("SupplierReceiver");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrderItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvideRawMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkNumber {
            get {
                return this.PMIWorkNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkNumberField, value) != true)) {
                    this.PMIWorkNumberField = value;
                    this.RaisePropertyChanged("PMIWorkNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvideRawMaterial {
            get {
                return this.ProvideRawMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvideRawMaterialField, value) != true)) {
                    this.ProvideRawMaterialField = value;
                    this.RaisePropertyChanged("ProvideRawMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordProduct", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionXRFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionAbbr {
            get {
                return this.CompositionAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionAbbrField, value) != true)) {
                    this.CompositionAbbrField = value;
                    this.RaisePropertyChanged("CompositionAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionXRF {
            get {
                return this.CompositionXRFField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionXRFField, value) != true)) {
                    this.CompositionXRFField = value;
                    this.RaisePropertyChanged("CompositionXRF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Density {
            get {
                return this.DensityField;
            }
            set {
                if ((object.ReferenceEquals(this.DensityField, value) != true)) {
                    this.DensityField = value;
                    this.RaisePropertyChanged("Density");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionActual {
            get {
                return this.DimensionActualField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionActualField, value) != true)) {
                    this.DimensionActualField = value;
                    this.RaisePropertyChanged("DimensionActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resistance {
            get {
                return this.ResistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResistanceField, value) != true)) {
                    this.ResistanceField = value;
                    this.RaisePropertyChanged("Resistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sample {
            get {
                return this.SampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleField, value) != true)) {
                    this.SampleField = value;
                    this.RaisePropertyChanged("Sample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMissonWithPlan", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMissonWithPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CalculationDensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositoinAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentMoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrainSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PowderWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RoomHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RoomTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPPlanRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CalculationDensity {
            get {
                return this.CalculationDensityField;
            }
            set {
                if ((this.CalculationDensityField.Equals(value) != true)) {
                    this.CalculationDensityField = value;
                    this.RaisePropertyChanged("CalculationDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositoinAbbr {
            get {
                return this.CompositoinAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositoinAbbrField, value) != true)) {
                    this.CompositoinAbbrField = value;
                    this.RaisePropertyChanged("CompositoinAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentMold {
            get {
                return this.CurrentMoldField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentMoldField, value) != true)) {
                    this.CurrentMoldField = value;
                    this.RaisePropertyChanged("CurrentMold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FillingRequirement {
            get {
                return this.FillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.FillingRequirementField, value) != true)) {
                    this.FillingRequirementField = value;
                    this.RaisePropertyChanged("FillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrainSize {
            get {
                return this.GrainSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GrainSizeField, value) != true)) {
                    this.GrainSizeField = value;
                    this.RaisePropertyChanged("GrainSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineRequirement {
            get {
                return this.MachineRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineRequirementField, value) != true)) {
                    this.MachineRequirementField = value;
                    this.RaisePropertyChanged("MachineRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MillingRequirement {
            get {
                return this.MillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MillingRequirementField, value) != true)) {
                    this.MillingRequirementField = value;
                    this.RaisePropertyChanged("MillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderRemark {
            get {
                return this.OrderRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRemarkField, value) != true)) {
                    this.OrderRemarkField = value;
                    this.RaisePropertyChanged("OrderRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PowderWeight {
            get {
                return this.PowderWeightField;
            }
            set {
                if ((this.PowderWeightField.Equals(value) != true)) {
                    this.PowderWeightField = value;
                    this.RaisePropertyChanged("PowderWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCode {
            get {
                return this.ProcessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCodeField, value) != true)) {
                    this.ProcessCodeField = value;
                    this.RaisePropertyChanged("ProcessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RoomHumidity {
            get {
                return this.RoomHumidityField;
            }
            set {
                if ((this.RoomHumidityField.Equals(value) != true)) {
                    this.RoomHumidityField = value;
                    this.RaisePropertyChanged("RoomHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RoomTemperature {
            get {
                return this.RoomTemperatureField;
            }
            set {
                if ((this.RoomTemperatureField.Equals(value) != true)) {
                    this.RoomTemperatureField = value;
                    this.RaisePropertyChanged("RoomTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetQuantity {
            get {
                return this.TargetQuantityField;
            }
            set {
                if ((this.TargetQuantityField.Equals(value) != true)) {
                    this.TargetQuantityField = value;
                    this.RaisePropertyChanged("TargetQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPPlanRemark {
            get {
                return this.VHPPlanRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPPlanRemarkField, value) != true)) {
                    this.VHPPlanRemarkField = value;
                    this.RaisePropertyChanged("VHPPlanRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPRequirement {
            get {
                return this.VHPRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPRequirementField, value) != true)) {
                    this.VHPRequirementField = value;
                    this.RaisePropertyChanged("VHPRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordDelivery", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordDelivery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSDesktopClient.ServiceReference.DcRecordDeliveryItem[] DeliveryItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShipTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSDesktopClient.ServiceReference.DcRecordDeliveryItem[] DeliveryItems {
            get {
                return this.DeliveryItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryItemsField, value) != true)) {
                    this.DeliveryItemsField = value;
                    this.RaisePropertyChanged("DeliveryItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryName {
            get {
                return this.DeliveryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryNameField, value) != true)) {
                    this.DeliveryNameField = value;
                    this.RaisePropertyChanged("DeliveryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryNumber {
            get {
                return this.DeliveryNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryNumberField, value) != true)) {
                    this.DeliveryNumberField = value;
                    this.RaisePropertyChanged("DeliveryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageInformation {
            get {
                return this.PackageInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageInformationField, value) != true)) {
                    this.PackageInformationField = value;
                    this.RaisePropertyChanged("PackageInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageTypeField, value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShipTime {
            get {
                return this.ShipTimeField;
            }
            set {
                if ((this.ShipTimeField.Equals(value) != true)) {
                    this.ShipTimeField = value;
                    this.RaisePropertyChanged("ShipTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordDeliveryItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordDeliveryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailRecord {
            get {
                return this.DetailRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailRecordField, value) != true)) {
                    this.DetailRecordField = value;
                    this.RaisePropertyChanged("DetailRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        PMSDesktopClient.ServiceReference.DcOrder[] GetAllOrderInPage(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetAllOrderInPageAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcOrder[] GetOrderBySearchInPage(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        int GetOrderCountBySearch(string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        int AddOrder(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        int UpdateOrder(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        int DeleteOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : PMSDesktopClient.ServiceReference.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IOrderService>, PMSDesktopClient.ServiceReference.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcOrder[] GetAllOrderInPage(int skip, int take) {
            return base.Channel.GetAllOrderInPage(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetAllOrderInPageAsync(int skip, int take) {
            return base.Channel.GetAllOrderInPageAsync(skip, take);
        }
        
        public PMSDesktopClient.ServiceReference.DcOrder[] GetOrderBySearchInPage(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPage(skip, take, customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPageAsync(skip, take, customer, compositionstd);
        }
        
        public int GetOrderCountBySearch(string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearch(customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearchAsync(customer, compositionstd);
        }
        
        public int AddOrder(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public int UpdateOrder(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSDesktopClient.ServiceReference.DcOrder order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public int DeleteOrder(System.Guid id) {
            return base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id) {
            return base.Channel.DeleteOrderAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IPlanVHPService")]
    public interface IPlanVHPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderID", ReplyAction="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderIDResponse")]
        PMSDesktopClient.ServiceReference.DcPlanVHP[] GetVHPPlansByOrderID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderID", ReplyAction="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderIDResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcPlanVHP[]> GetVHPPlansByOrderIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/AddVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/AddVHPPlanResponse")]
        int AddVHPPlan(PMSDesktopClient.ServiceReference.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/AddVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/AddVHPPlanResponse")]
        System.Threading.Tasks.Task<int> AddVHPPlanAsync(PMSDesktopClient.ServiceReference.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/UpdateVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/UpdateVHPPlanResponse")]
        int UpdateVHPPlan(PMSDesktopClient.ServiceReference.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/UpdateVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/UpdateVHPPlanResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPPlanAsync(PMSDesktopClient.ServiceReference.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/DeleteVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/DeleteVHPPlanResponse")]
        int DeleteVHPPlan(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/DeleteVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/DeleteVHPPlanResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPPlanAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanVHPServiceChannel : PMSDesktopClient.ServiceReference.IPlanVHPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanVHPServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IPlanVHPService>, PMSDesktopClient.ServiceReference.IPlanVHPService {
        
        public PlanVHPServiceClient() {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanVHPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcPlanVHP[] GetVHPPlansByOrderID(System.Guid id) {
            return base.Channel.GetVHPPlansByOrderID(id);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcPlanVHP[]> GetVHPPlansByOrderIDAsync(System.Guid id) {
            return base.Channel.GetVHPPlansByOrderIDAsync(id);
        }
        
        public int AddVHPPlan(PMSDesktopClient.ServiceReference.DcPlanVHP model) {
            return base.Channel.AddVHPPlan(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPPlanAsync(PMSDesktopClient.ServiceReference.DcPlanVHP model) {
            return base.Channel.AddVHPPlanAsync(model);
        }
        
        public int UpdateVHPPlan(PMSDesktopClient.ServiceReference.DcPlanVHP model) {
            return base.Channel.UpdateVHPPlan(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPPlanAsync(PMSDesktopClient.ServiceReference.DcPlanVHP model) {
            return base.Channel.UpdateVHPPlanAsync(model);
        }
        
        public int DeleteVHPPlan(System.Guid id) {
            return base.Channel.DeleteVHPPlan(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPPlanAsync(System.Guid id) {
            return base.Channel.DeleteVHPPlanAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMaterialNeedService")]
    public interface IMaterialNeedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPage", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcMaterialNeed[] GetMaterialNeedBySearchInPage(int skip, int take, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPage", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialNeed[]> GetMaterialNeedBySearchInPageAsync(int skip, int take, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearch", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearchResponse")]
        int GetMaterialNeedCountBySearch(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearch", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMaterialNeedCountBySearchAsync(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/AddMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/AddMaterialNeedResponse")]
        int AddMaterialNeed(PMSDesktopClient.ServiceReference.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/AddMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/AddMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> AddMaterialNeedAsync(PMSDesktopClient.ServiceReference.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeedResponse")]
        int UpdateMaterialNeed(PMSDesktopClient.ServiceReference.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialNeedAsync(PMSDesktopClient.ServiceReference.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeedResponse")]
        int DeleteMaterialNeed(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialNeedAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialNeedServiceChannel : PMSDesktopClient.ServiceReference.IMaterialNeedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialNeedServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IMaterialNeedService>, PMSDesktopClient.ServiceReference.IMaterialNeedService {
        
        public MaterialNeedServiceClient() {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialNeedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcMaterialNeed[] GetMaterialNeedBySearchInPage(int skip, int take, string composition) {
            return base.Channel.GetMaterialNeedBySearchInPage(skip, take, composition);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialNeed[]> GetMaterialNeedBySearchInPageAsync(int skip, int take, string composition) {
            return base.Channel.GetMaterialNeedBySearchInPageAsync(skip, take, composition);
        }
        
        public int GetMaterialNeedCountBySearch(string composition) {
            return base.Channel.GetMaterialNeedCountBySearch(composition);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialNeedCountBySearchAsync(string composition) {
            return base.Channel.GetMaterialNeedCountBySearchAsync(composition);
        }
        
        public int AddMaterialNeed(PMSDesktopClient.ServiceReference.DcMaterialNeed model) {
            return base.Channel.AddMaterialNeed(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialNeedAsync(PMSDesktopClient.ServiceReference.DcMaterialNeed model) {
            return base.Channel.AddMaterialNeedAsync(model);
        }
        
        public int UpdateMaterialNeed(PMSDesktopClient.ServiceReference.DcMaterialNeed model) {
            return base.Channel.UpdateMaterialNeed(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialNeedAsync(PMSDesktopClient.ServiceReference.DcMaterialNeed model) {
            return base.Channel.UpdateMaterialNeedAsync(model);
        }
        
        public int DeleteMaterialNeed(System.Guid id) {
            return base.Channel.DeleteMaterialNeed(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialNeedAsync(System.Guid id) {
            return base.Channel.DeleteMaterialNeedAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMaterialOrderService")]
    public interface IMaterialOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPage", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcMaterialOrder[] GetMaterialOrderBySearchInPage(int skip, int take, string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPage", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialOrder[]> GetMaterialOrderBySearchInPageAsync(int skip, int take, string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearch", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearchResponse")]
        int GetMaterialOrderCountBySearch(string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearch", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderCountBySearchAsync(string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderResponse")]
        int AddMaterialOrder(PMSDesktopClient.ServiceReference.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> AddMaterialOrderAsync(PMSDesktopClient.ServiceReference.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderResponse")]
        int UpdateMaterialOrder(PMSDesktopClient.ServiceReference.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialOrderAsync(PMSDesktopClient.ServiceReference.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderResponse")]
        int DeleteMaterialOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialOrderAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialIDResponse" +
            "")]
        PMSDesktopClient.ServiceReference.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialIDResponse" +
            "")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItemResponse")]
        int AddMaterialOrderItem(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> AddMaterialOrderItemAsync(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItemResponse")]
        int UpdateMaterialOrderItem(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItemResponse")]
        int DeleteMaterialOrderItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialOrderItemAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialOrderServiceChannel : PMSDesktopClient.ServiceReference.IMaterialOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialOrderServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IMaterialOrderService>, PMSDesktopClient.ServiceReference.IMaterialOrderService {
        
        public MaterialOrderServiceClient() {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcMaterialOrder[] GetMaterialOrderBySearchInPage(int skip, int take, string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderBySearchInPage(skip, take, orderPo, supplier);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialOrder[]> GetMaterialOrderBySearchInPageAsync(int skip, int take, string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderBySearchInPageAsync(skip, take, orderPo, supplier);
        }
        
        public int GetMaterialOrderCountBySearch(string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderCountBySearch(orderPo, supplier);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderCountBySearchAsync(string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderCountBySearchAsync(orderPo, supplier);
        }
        
        public int AddMaterialOrder(PMSDesktopClient.ServiceReference.DcMaterialOrder model) {
            return base.Channel.AddMaterialOrder(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialOrderAsync(PMSDesktopClient.ServiceReference.DcMaterialOrder model) {
            return base.Channel.AddMaterialOrderAsync(model);
        }
        
        public int UpdateMaterialOrder(PMSDesktopClient.ServiceReference.DcMaterialOrder model) {
            return base.Channel.UpdateMaterialOrder(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialOrderAsync(PMSDesktopClient.ServiceReference.DcMaterialOrder model) {
            return base.Channel.UpdateMaterialOrderAsync(model);
        }
        
        public int DeleteMaterialOrder(System.Guid id) {
            return base.Channel.DeleteMaterialOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialOrderAsync(System.Guid id) {
            return base.Channel.DeleteMaterialOrderAsync(id);
        }
        
        public PMSDesktopClient.ServiceReference.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialID(id);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialIDAsync(id);
        }
        
        public int AddMaterialOrderItem(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model) {
            return base.Channel.AddMaterialOrderItem(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialOrderItemAsync(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model) {
            return base.Channel.AddMaterialOrderItemAsync(model);
        }
        
        public int UpdateMaterialOrderItem(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model) {
            return base.Channel.UpdateMaterialOrderItem(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSDesktopClient.ServiceReference.DcMaterialOrderItem model) {
            return base.Channel.UpdateMaterialOrderItemAsync(model);
        }
        
        public int DeleteMaterialOrderItem(System.Guid id) {
            return base.Channel.DeleteMaterialOrderItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialOrderItemAsync(System.Guid id) {
            return base.Channel.DeleteMaterialOrderItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMissonService")]
    public interface IMissonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonBySearchInPage", ReplyAction="http://tempuri.org/IMissonService/GetMissonBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcOrder[] GetMissonBySearchInPage(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonBySearchInPage", ReplyAction="http://tempuri.org/IMissonService/GetMissonBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetMissonBySearchInPageAsync(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonCountBySearch", ReplyAction="http://tempuri.org/IMissonService/GetMissonCountBySearchResponse")]
        int GetMissonCountBySearch(string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonCountBySearch", ReplyAction="http://tempuri.org/IMissonService/GetMissonCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMissonCountBySearchAsync(string customer, string compositionstd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMissonServiceChannel : PMSDesktopClient.ServiceReference.IMissonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MissonServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IMissonService>, PMSDesktopClient.ServiceReference.IMissonService {
        
        public MissonServiceClient() {
        }
        
        public MissonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MissonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcOrder[] GetMissonBySearchInPage(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetMissonBySearchInPage(skip, take, customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcOrder[]> GetMissonBySearchInPageAsync(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetMissonBySearchInPageAsync(skip, take, customer, compositionstd);
        }
        
        public int GetMissonCountBySearch(string customer, string compositionstd) {
            return base.Channel.GetMissonCountBySearch(customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<int> GetMissonCountBySearchAsync(string customer, string compositionstd) {
            return base.Channel.GetMissonCountBySearchAsync(customer, compositionstd);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IRecordProductService")]
    public interface IRecordProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/GetRecordProductBySearchInPage", ReplyAction="http://tempuri.org/IRecordProductService/GetRecordProductBySearchInPageResponse")]
        PMSDesktopClient.ServiceReference.DcRecordProduct[] GetRecordProductBySearchInPage(int skip, int take, string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/GetRecordProductBySearchInPage", ReplyAction="http://tempuri.org/IRecordProductService/GetRecordProductBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcRecordProduct[]> GetRecordProductBySearchInPageAsync(int skip, int take, string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/GetRecordProductCountBySearchInPage", ReplyAction="http://tempuri.org/IRecordProductService/GetRecordProductCountBySearchInPageRespo" +
            "nse")]
        int GetRecordProductCountBySearchInPage(string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/GetRecordProductCountBySearchInPage", ReplyAction="http://tempuri.org/IRecordProductService/GetRecordProductCountBySearchInPageRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> GetRecordProductCountBySearchInPageAsync(string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/AddRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/AddRecordProductResponse")]
        int AddRecordProduct(PMSDesktopClient.ServiceReference.DcRecordProduct model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/AddRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/AddRecordProductResponse")]
        System.Threading.Tasks.Task<int> AddRecordProductAsync(PMSDesktopClient.ServiceReference.DcRecordProduct model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/UpdateRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/UpdateRecordProductResponse")]
        int UpdateRecordProduct(PMSDesktopClient.ServiceReference.DcRecordProduct model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/UpdateRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/UpdateRecordProductResponse")]
        System.Threading.Tasks.Task<int> UpdateRecordProductAsync(PMSDesktopClient.ServiceReference.DcRecordProduct model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/DeleteRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/DeleteRecordProductResponse")]
        int DeleteRecordProduct(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordProductService/DeleteRecordProduct", ReplyAction="http://tempuri.org/IRecordProductService/DeleteRecordProductResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordProductAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordProductServiceChannel : PMSDesktopClient.ServiceReference.IRecordProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordProductServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IRecordProductService>, PMSDesktopClient.ServiceReference.IRecordProductService {
        
        public RecordProductServiceClient() {
        }
        
        public RecordProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcRecordProduct[] GetRecordProductBySearchInPage(int skip, int take, string productId, string compositionStd) {
            return base.Channel.GetRecordProductBySearchInPage(skip, take, productId, compositionStd);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcRecordProduct[]> GetRecordProductBySearchInPageAsync(int skip, int take, string productId, string compositionStd) {
            return base.Channel.GetRecordProductBySearchInPageAsync(skip, take, productId, compositionStd);
        }
        
        public int GetRecordProductCountBySearchInPage(string productId, string compositionStd) {
            return base.Channel.GetRecordProductCountBySearchInPage(productId, compositionStd);
        }
        
        public System.Threading.Tasks.Task<int> GetRecordProductCountBySearchInPageAsync(string productId, string compositionStd) {
            return base.Channel.GetRecordProductCountBySearchInPageAsync(productId, compositionStd);
        }
        
        public int AddRecordProduct(PMSDesktopClient.ServiceReference.DcRecordProduct model) {
            return base.Channel.AddRecordProduct(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordProductAsync(PMSDesktopClient.ServiceReference.DcRecordProduct model) {
            return base.Channel.AddRecordProductAsync(model);
        }
        
        public int UpdateRecordProduct(PMSDesktopClient.ServiceReference.DcRecordProduct model) {
            return base.Channel.UpdateRecordProduct(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRecordProductAsync(PMSDesktopClient.ServiceReference.DcRecordProduct model) {
            return base.Channel.UpdateRecordProductAsync(model);
        }
        
        public int DeleteRecordProduct(System.Guid id) {
            return base.Channel.DeleteRecordProduct(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordProductAsync(System.Guid id) {
            return base.Channel.DeleteRecordProductAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMissonWithPlanService")]
    public interface IMissonWithPlanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlan", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanResponse")]
        PMSDesktopClient.ServiceReference.DcMissonWithPlan[] GetMissonWithPlan(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlan", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMissonWithPlan[]> GetMissonWithPlanAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCount", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCountResponse")]
        int GetMissonWithPlanCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCount", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCountResponse")]
        System.Threading.Tasks.Task<int> GetMissonWithPlanCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDate", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDateResponse")]
        PMSDesktopClient.ServiceReference.DcMissonWithPlan[] GetMissonWithPlanByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDate", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDateResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMissonWithPlan[]> GetMissonWithPlanByDateAsync(System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMissonWithPlanServiceChannel : PMSDesktopClient.ServiceReference.IMissonWithPlanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MissonWithPlanServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IMissonWithPlanService>, PMSDesktopClient.ServiceReference.IMissonWithPlanService {
        
        public MissonWithPlanServiceClient() {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonWithPlanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcMissonWithPlan[] GetMissonWithPlan(int skip, int take) {
            return base.Channel.GetMissonWithPlan(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMissonWithPlan[]> GetMissonWithPlanAsync(int skip, int take) {
            return base.Channel.GetMissonWithPlanAsync(skip, take);
        }
        
        public int GetMissonWithPlanCount() {
            return base.Channel.GetMissonWithPlanCount();
        }
        
        public System.Threading.Tasks.Task<int> GetMissonWithPlanCountAsync() {
            return base.Channel.GetMissonWithPlanCountAsync();
        }
        
        public PMSDesktopClient.ServiceReference.DcMissonWithPlan[] GetMissonWithPlanByDate(System.DateTime date) {
            return base.Channel.GetMissonWithPlanByDate(date);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcMissonWithPlan[]> GetMissonWithPlanByDateAsync(System.DateTime date) {
            return base.Channel.GetMissonWithPlanByDateAsync(date);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IRecordDeliveryService")]
    public interface IRecordDeliveryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryResponse")]
        PMSDesktopClient.ServiceReference.DcRecordDelivery[] GetDelivery(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryResponse")]
        System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcRecordDelivery[]> GetDeliveryAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDeliveryCount", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryCountResponse")]
        int GetDeliveryCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDeliveryCount", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryCountResponse")]
        System.Threading.Tasks.Task<int> GetDeliveryCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryResponse")]
        int AddRecordDelivery(PMSDesktopClient.ServiceReference.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryResponse")]
        System.Threading.Tasks.Task<int> AddRecordDeliveryAsync(PMSDesktopClient.ServiceReference.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryResponse")]
        int UpdateReocrdDelivery(PMSDesktopClient.ServiceReference.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdDeliveryAsync(PMSDesktopClient.ServiceReference.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryResponse")]
        int DeleteRecordDelivery(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordDeliveryAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItemResponse")]
        int AddRecordDeliveryItem(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> AddRecordDeliveryItemAsync(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItemResponse")]
        int UpdateReocrdDeliveryItem(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdDeliveryItemAsync(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItemResponse")]
        int DeleteRecordDeliveryItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordDeliveryItemAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordDeliveryServiceChannel : PMSDesktopClient.ServiceReference.IRecordDeliveryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordDeliveryServiceClient : System.ServiceModel.ClientBase<PMSDesktopClient.ServiceReference.IRecordDeliveryService>, PMSDesktopClient.ServiceReference.IRecordDeliveryService {
        
        public RecordDeliveryServiceClient() {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordDeliveryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSDesktopClient.ServiceReference.DcRecordDelivery[] GetDelivery(int skip, int take) {
            return base.Channel.GetDelivery(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSDesktopClient.ServiceReference.DcRecordDelivery[]> GetDeliveryAsync(int skip, int take) {
            return base.Channel.GetDeliveryAsync(skip, take);
        }
        
        public int GetDeliveryCount() {
            return base.Channel.GetDeliveryCount();
        }
        
        public System.Threading.Tasks.Task<int> GetDeliveryCountAsync() {
            return base.Channel.GetDeliveryCountAsync();
        }
        
        public int AddRecordDelivery(PMSDesktopClient.ServiceReference.DcRecordDelivery model) {
            return base.Channel.AddRecordDelivery(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordDeliveryAsync(PMSDesktopClient.ServiceReference.DcRecordDelivery model) {
            return base.Channel.AddRecordDeliveryAsync(model);
        }
        
        public int UpdateReocrdDelivery(PMSDesktopClient.ServiceReference.DcRecordDelivery model) {
            return base.Channel.UpdateReocrdDelivery(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdDeliveryAsync(PMSDesktopClient.ServiceReference.DcRecordDelivery model) {
            return base.Channel.UpdateReocrdDeliveryAsync(model);
        }
        
        public int DeleteRecordDelivery(System.Guid id) {
            return base.Channel.DeleteRecordDelivery(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordDeliveryAsync(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryAsync(id);
        }
        
        public int AddRecordDeliveryItem(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model) {
            return base.Channel.AddRecordDeliveryItem(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordDeliveryItemAsync(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model) {
            return base.Channel.AddRecordDeliveryItemAsync(model);
        }
        
        public int UpdateReocrdDeliveryItem(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model) {
            return base.Channel.UpdateReocrdDeliveryItem(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdDeliveryItemAsync(PMSDesktopClient.ServiceReference.DcRecordDeliveryItem model) {
            return base.Channel.UpdateReocrdDeliveryItemAsync(model);
        }
        
        public int DeleteRecordDeliveryItem(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordDeliveryItemAsync(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryItemAsync(id);
        }
    }
}
