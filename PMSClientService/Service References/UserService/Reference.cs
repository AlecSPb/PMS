//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSClientService.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcUser", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealName {
            get {
                return this.RealNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RealNameField, value) != true)) {
                    this.RealNameField = value;
                    this.RaisePropertyChanged("RealName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcUserRole", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraInformation {
            get {
                return this.ExtraInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInformationField, value) != true)) {
                    this.ExtraInformationField = value;
                    this.RaisePropertyChanged("ExtraInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcUserAccess", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcUserAccess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessCode {
            get {
                return this.AccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessCodeField, value) != true)) {
                    this.AccessCodeField = value;
                    this.RaisePropertyChanged("AccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessName {
            get {
                return this.AccessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessNameField, value) != true)) {
                    this.AccessNameField = value;
                    this.RaisePropertyChanged("AccessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraInformation {
            get {
                return this.ExtraInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInformationField, value) != true)) {
                    this.ExtraInformationField = value;
                    this.RaisePropertyChanged("ExtraInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserAccessService")]
    public interface IUserAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllUsers", ReplyAction="http://tempuri.org/IUserAccessService/GetAllUsersResponse")]
        PMSClientService.UserService.DcUser[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllUsers", ReplyAction="http://tempuri.org/IUserAccessService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<PMSClientService.UserService.DcUser[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllRoles", ReplyAction="http://tempuri.org/IUserAccessService/GetAllRolesResponse")]
        PMSClientService.UserService.DcUserRole[] GetAllRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllRoles", ReplyAction="http://tempuri.org/IUserAccessService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<PMSClientService.UserService.DcUserRole[]> GetAllRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllAccesses", ReplyAction="http://tempuri.org/IUserAccessService/GetAllAccessesResponse")]
        PMSClientService.UserService.DcUserAccess[] GetAllAccesses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAllAccesses", ReplyAction="http://tempuri.org/IUserAccessService/GetAllAccessesResponse")]
        System.Threading.Tasks.Task<PMSClientService.UserService.DcUserAccess[]> GetAllAccessesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetRoleByUserId", ReplyAction="http://tempuri.org/IUserAccessService/GetRoleByUserIdResponse")]
        PMSClientService.UserService.DcUserRole GetRoleByUserId(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetRoleByUserId", ReplyAction="http://tempuri.org/IUserAccessService/GetRoleByUserIdResponse")]
        System.Threading.Tasks.Task<PMSClientService.UserService.DcUserRole> GetRoleByUserIdAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAccessesByRoleId", ReplyAction="http://tempuri.org/IUserAccessService/GetAccessesByRoleIdResponse")]
        PMSClientService.UserService.DcUserAccess[] GetAccessesByRoleId(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/GetAccessesByRoleId", ReplyAction="http://tempuri.org/IUserAccessService/GetAccessesByRoleIdResponse")]
        System.Threading.Tasks.Task<PMSClientService.UserService.DcUserAccess[]> GetAccessesByRoleIdAsync(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddUser", ReplyAction="http://tempuri.org/IUserAccessService/AddUserResponse")]
        int AddUser(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddUser", ReplyAction="http://tempuri.org/IUserAccessService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddRole", ReplyAction="http://tempuri.org/IUserAccessService/AddRoleResponse")]
        int AddRole(PMSClientService.UserService.DcUserRole model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddRole", ReplyAction="http://tempuri.org/IUserAccessService/AddRoleResponse")]
        System.Threading.Tasks.Task<int> AddRoleAsync(PMSClientService.UserService.DcUserRole model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddAccess", ReplyAction="http://tempuri.org/IUserAccessService/AddAccessResponse")]
        int AddAccess(PMSClientService.UserService.DcUserAccess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/AddAccess", ReplyAction="http://tempuri.org/IUserAccessService/AddAccessResponse")]
        System.Threading.Tasks.Task<int> AddAccessAsync(PMSClientService.UserService.DcUserAccess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateUser", ReplyAction="http://tempuri.org/IUserAccessService/UpdateUserResponse")]
        int UpdateUser(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateUser", ReplyAction="http://tempuri.org/IUserAccessService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateRole", ReplyAction="http://tempuri.org/IUserAccessService/UpdateRoleResponse")]
        int UpdateRole(PMSClientService.UserService.DcUserRole model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateRole", ReplyAction="http://tempuri.org/IUserAccessService/UpdateRoleResponse")]
        System.Threading.Tasks.Task<int> UpdateRoleAsync(PMSClientService.UserService.DcUserRole model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateAccess", ReplyAction="http://tempuri.org/IUserAccessService/UpdateAccessResponse")]
        int UpdateAccess(PMSClientService.UserService.DcUserAccess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/UpdateAccess", ReplyAction="http://tempuri.org/IUserAccessService/UpdateAccessResponse")]
        System.Threading.Tasks.Task<int> UpdateAccessAsync(PMSClientService.UserService.DcUserAccess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteUser", ReplyAction="http://tempuri.org/IUserAccessService/DeleteUserResponse")]
        int DeleteUser(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteUser", ReplyAction="http://tempuri.org/IUserAccessService/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteRole", ReplyAction="http://tempuri.org/IUserAccessService/DeleteRoleResponse")]
        int DeleteRole(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteRole", ReplyAction="http://tempuri.org/IUserAccessService/DeleteRoleResponse")]
        System.Threading.Tasks.Task<int> DeleteRoleAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteAccess", ReplyAction="http://tempuri.org/IUserAccessService/DeleteAccessResponse")]
        int DeleteAccess(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/DeleteAccess", ReplyAction="http://tempuri.org/IUserAccessService/DeleteAccessResponse")]
        System.Threading.Tasks.Task<int> DeleteAccessAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckUserName", ReplyAction="http://tempuri.org/IUserAccessService/CheckUserNameResponse")]
        bool CheckUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckUserName", ReplyAction="http://tempuri.org/IUserAccessService/CheckUserNameResponse")]
        System.Threading.Tasks.Task<bool> CheckUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckLogIn", ReplyAction="http://tempuri.org/IUserAccessService/CheckLogInResponse")]
        bool CheckLogIn(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckLogIn", ReplyAction="http://tempuri.org/IUserAccessService/CheckLogInResponse")]
        System.Threading.Tasks.Task<bool> CheckLogInAsync(PMSClientService.UserService.DcUser model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckAccess", ReplyAction="http://tempuri.org/IUserAccessService/CheckAccessResponse")]
        bool CheckAccess(PMSClientService.UserService.DcUser model, string AccessCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserAccessService/CheckAccess", ReplyAction="http://tempuri.org/IUserAccessService/CheckAccessResponse")]
        System.Threading.Tasks.Task<bool> CheckAccessAsync(PMSClientService.UserService.DcUser model, string AccessCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserAccessServiceChannel : PMSClientService.UserService.IUserAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserAccessServiceClient : System.ServiceModel.ClientBase<PMSClientService.UserService.IUserAccessService>, PMSClientService.UserService.IUserAccessService {
        
        public UserAccessServiceClient() {
        }
        
        public UserAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSClientService.UserService.DcUser[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<PMSClientService.UserService.DcUser[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public PMSClientService.UserService.DcUserRole[] GetAllRoles() {
            return base.Channel.GetAllRoles();
        }
        
        public System.Threading.Tasks.Task<PMSClientService.UserService.DcUserRole[]> GetAllRolesAsync() {
            return base.Channel.GetAllRolesAsync();
        }
        
        public PMSClientService.UserService.DcUserAccess[] GetAllAccesses() {
            return base.Channel.GetAllAccesses();
        }
        
        public System.Threading.Tasks.Task<PMSClientService.UserService.DcUserAccess[]> GetAllAccessesAsync() {
            return base.Channel.GetAllAccessesAsync();
        }
        
        public PMSClientService.UserService.DcUserRole GetRoleByUserId(System.Guid userId) {
            return base.Channel.GetRoleByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<PMSClientService.UserService.DcUserRole> GetRoleByUserIdAsync(System.Guid userId) {
            return base.Channel.GetRoleByUserIdAsync(userId);
        }
        
        public PMSClientService.UserService.DcUserAccess[] GetAccessesByRoleId(System.Guid roleId) {
            return base.Channel.GetAccessesByRoleId(roleId);
        }
        
        public System.Threading.Tasks.Task<PMSClientService.UserService.DcUserAccess[]> GetAccessesByRoleIdAsync(System.Guid roleId) {
            return base.Channel.GetAccessesByRoleIdAsync(roleId);
        }
        
        public int AddUser(PMSClientService.UserService.DcUser model) {
            return base.Channel.AddUser(model);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(PMSClientService.UserService.DcUser model) {
            return base.Channel.AddUserAsync(model);
        }
        
        public int AddRole(PMSClientService.UserService.DcUserRole model) {
            return base.Channel.AddRole(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRoleAsync(PMSClientService.UserService.DcUserRole model) {
            return base.Channel.AddRoleAsync(model);
        }
        
        public int AddAccess(PMSClientService.UserService.DcUserAccess model) {
            return base.Channel.AddAccess(model);
        }
        
        public System.Threading.Tasks.Task<int> AddAccessAsync(PMSClientService.UserService.DcUserAccess model) {
            return base.Channel.AddAccessAsync(model);
        }
        
        public int UpdateUser(PMSClientService.UserService.DcUser model) {
            return base.Channel.UpdateUser(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(PMSClientService.UserService.DcUser model) {
            return base.Channel.UpdateUserAsync(model);
        }
        
        public int UpdateRole(PMSClientService.UserService.DcUserRole model) {
            return base.Channel.UpdateRole(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRoleAsync(PMSClientService.UserService.DcUserRole model) {
            return base.Channel.UpdateRoleAsync(model);
        }
        
        public int UpdateAccess(PMSClientService.UserService.DcUserAccess model) {
            return base.Channel.UpdateAccess(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccessAsync(PMSClientService.UserService.DcUserAccess model) {
            return base.Channel.UpdateAccessAsync(model);
        }
        
        public int DeleteUser(System.Guid id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(System.Guid id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public int DeleteRole(System.Guid id) {
            return base.Channel.DeleteRole(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRoleAsync(System.Guid id) {
            return base.Channel.DeleteRoleAsync(id);
        }
        
        public int DeleteAccess(System.Guid id) {
            return base.Channel.DeleteAccess(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAccessAsync(System.Guid id) {
            return base.Channel.DeleteAccessAsync(id);
        }
        
        public bool CheckUserName(string userName) {
            return base.Channel.CheckUserName(userName);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserNameAsync(string userName) {
            return base.Channel.CheckUserNameAsync(userName);
        }
        
        public bool CheckLogIn(PMSClientService.UserService.DcUser model) {
            return base.Channel.CheckLogIn(model);
        }
        
        public System.Threading.Tasks.Task<bool> CheckLogInAsync(PMSClientService.UserService.DcUser model) {
            return base.Channel.CheckLogInAsync(model);
        }
        
        public bool CheckAccess(PMSClientService.UserService.DcUser model, string AccessCode) {
            return base.Channel.CheckAccess(model, AccessCode);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccessAsync(PMSClientService.UserService.DcUser model, string AccessCode) {
            return base.Channel.CheckAccessAsync(model, AccessCode);
        }
    }
}
