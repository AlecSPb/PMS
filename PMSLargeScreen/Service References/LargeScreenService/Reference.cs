//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSLargeScreen.LargeScreenService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcPlanExtra", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcPlanExtra : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSLargeScreen.LargeScreenService.DcOrder MissonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSLargeScreen.LargeScreenService.DcPlanVHP PlanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSLargeScreen.LargeScreenService.DcOrder Misson {
            get {
                return this.MissonField;
            }
            set {
                if ((object.ReferenceEquals(this.MissonField, value) != true)) {
                    this.MissonField = value;
                    this.RaisePropertyChanged("Misson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSLargeScreen.LargeScreenService.DcPlanVHP Plan {
            get {
                return this.PlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanField, value) != true)) {
                    this.PlanField = value;
                    this.RaisePropertyChanged("Plan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMINumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateRemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionAbbr {
            get {
                return this.CompositionAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionAbbrField, value) != true)) {
                    this.CompositionAbbrField = value;
                    this.RaisePropertyChanged("CompositionAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMINumber {
            get {
                return this.PMINumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMINumberField, value) != true)) {
                    this.PMINumberField = value;
                    this.RaisePropertyChanged("PMINumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewTime {
            get {
                return this.ReviewTimeField;
            }
            set {
                if ((this.ReviewTimeField.Equals(value) != true)) {
                    this.ReviewTimeField = value;
                    this.RaisePropertyChanged("ReviewTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateRemark {
            get {
                return this.StateRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StateRemarkField, value) != true)) {
                    this.StateRemarkField = value;
                    this.RaisePropertyChanged("StateRemark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcPlanVHP", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcPlanVHP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AllWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalculationDensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrainSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SingleWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AllWeight {
            get {
                return this.AllWeightField;
            }
            set {
                if ((this.AllWeightField.Equals(value) != true)) {
                    this.AllWeightField = value;
                    this.RaisePropertyChanged("AllWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalculationDensity {
            get {
                return this.CalculationDensityField;
            }
            set {
                if ((this.CalculationDensityField.Equals(value) != true)) {
                    this.CalculationDensityField = value;
                    this.RaisePropertyChanged("CalculationDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FillingRequirement {
            get {
                return this.FillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.FillingRequirementField, value) != true)) {
                    this.FillingRequirementField = value;
                    this.RaisePropertyChanged("FillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrainSize {
            get {
                return this.GrainSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GrainSizeField, value) != true)) {
                    this.GrainSizeField = value;
                    this.RaisePropertyChanged("GrainSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineRequirement {
            get {
                return this.MachineRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineRequirementField, value) != true)) {
                    this.MachineRequirementField = value;
                    this.RaisePropertyChanged("MachineRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MillingRequirement {
            get {
                return this.MillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MillingRequirementField, value) != true)) {
                    this.MillingRequirementField = value;
                    this.RaisePropertyChanged("MillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanLot {
            get {
                return this.PlanLotField;
            }
            set {
                if ((this.PlanLotField.Equals(value) != true)) {
                    this.PlanLotField = value;
                    this.RaisePropertyChanged("PlanLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanType {
            get {
                return this.PlanTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanTypeField, value) != true)) {
                    this.PlanTypeField = value;
                    this.RaisePropertyChanged("PlanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCode {
            get {
                return this.ProcessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCodeField, value) != true)) {
                    this.ProcessCodeField = value;
                    this.RaisePropertyChanged("ProcessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomHumidity {
            get {
                return this.RoomHumidityField;
            }
            set {
                if ((this.RoomHumidityField.Equals(value) != true)) {
                    this.RoomHumidityField = value;
                    this.RaisePropertyChanged("RoomHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomTemperature {
            get {
                return this.RoomTemperatureField;
            }
            set {
                if ((this.RoomTemperatureField.Equals(value) != true)) {
                    this.RoomTemperatureField = value;
                    this.RaisePropertyChanged("RoomTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchCode {
            get {
                return this.SearchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchCodeField, value) != true)) {
                    this.SearchCodeField = value;
                    this.RaisePropertyChanged("SearchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SingleWeight {
            get {
                return this.SingleWeightField;
            }
            set {
                if ((this.SingleWeightField.Equals(value) != true)) {
                    this.SingleWeightField = value;
                    this.RaisePropertyChanged("SingleWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPRequirement {
            get {
                return this.VHPRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPRequirementField, value) != true)) {
                    this.VHPRequirementField = value;
                    this.RaisePropertyChanged("VHPRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcStatistic", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LargeScreenService.ILargeScreenService")]
    public interface ILargeScreenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILargeScreenService/GetPlanByDate", ReplyAction="http://tempuri.org/ILargeScreenService/GetPlanByDateResponse")]
        PMSLargeScreen.LargeScreenService.DcPlanExtra[] GetPlanByDate(System.DateTime planDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILargeScreenService/GetPlanByDate", ReplyAction="http://tempuri.org/ILargeScreenService/GetPlanByDateResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.LargeScreenService.DcPlanExtra[]> GetPlanByDateAsync(System.DateTime planDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILargeScreenService/GetPlanStatistic", ReplyAction="http://tempuri.org/ILargeScreenService/GetPlanStatisticResponse")]
        PMSLargeScreen.LargeScreenService.DcStatistic[] GetPlanStatistic();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILargeScreenService/GetPlanStatistic", ReplyAction="http://tempuri.org/ILargeScreenService/GetPlanStatisticResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.LargeScreenService.DcStatistic[]> GetPlanStatisticAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILargeScreenServiceChannel : PMSLargeScreen.LargeScreenService.ILargeScreenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LargeScreenServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.LargeScreenService.ILargeScreenService>, PMSLargeScreen.LargeScreenService.ILargeScreenService {
        
        public LargeScreenServiceClient() {
        }
        
        public LargeScreenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LargeScreenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LargeScreenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LargeScreenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.LargeScreenService.DcPlanExtra[] GetPlanByDate(System.DateTime planDate) {
            return base.Channel.GetPlanByDate(planDate);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.LargeScreenService.DcPlanExtra[]> GetPlanByDateAsync(System.DateTime planDate) {
            return base.Channel.GetPlanByDateAsync(planDate);
        }
        
        public PMSLargeScreen.LargeScreenService.DcStatistic[] GetPlanStatistic() {
            return base.Channel.GetPlanStatistic();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.LargeScreenService.DcStatistic[]> GetPlanStatisticAsync() {
            return base.Channel.GetPlanStatisticAsync();
        }
    }
}
