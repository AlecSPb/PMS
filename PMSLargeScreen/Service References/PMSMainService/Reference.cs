//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMSLargeScreen.PMSMainService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositoinAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PolicyMakeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReviewPassedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateRemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositoinAbbr {
            get {
                return this.CompositoinAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositoinAbbrField, value) != true)) {
                    this.CompositoinAbbrField = value;
                    this.RaisePropertyChanged("CompositoinAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyContent {
            get {
                return this.PolicyContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyContentField, value) != true)) {
                    this.PolicyContentField = value;
                    this.RaisePropertyChanged("PolicyContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PolicyMakeDate {
            get {
                return this.PolicyMakeDateField;
            }
            set {
                if ((this.PolicyMakeDateField.Equals(value) != true)) {
                    this.PolicyMakeDateField = value;
                    this.RaisePropertyChanged("PolicyMakeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyMaker {
            get {
                return this.PolicyMakerField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyMakerField, value) != true)) {
                    this.PolicyMakerField = value;
                    this.RaisePropertyChanged("PolicyMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyType {
            get {
                return this.PolicyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyTypeField, value) != true)) {
                    this.PolicyTypeField = value;
                    this.RaisePropertyChanged("PolicyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewDate {
            get {
                return this.ReviewDateField;
            }
            set {
                if ((this.ReviewDateField.Equals(value) != true)) {
                    this.ReviewDateField = value;
                    this.RaisePropertyChanged("ReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReviewPassed {
            get {
                return this.ReviewPassedField;
            }
            set {
                if ((this.ReviewPassedField.Equals(value) != true)) {
                    this.ReviewPassedField = value;
                    this.RaisePropertyChanged("ReviewPassed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateRemark {
            get {
                return this.StateRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.StateRemarkField, value) != true)) {
                    this.StateRemarkField = value;
                    this.RaisePropertyChanged("StateRemark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcPlanVHP", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcPlanVHP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalculationDensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrainSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalculationDensity {
            get {
                return this.CalculationDensityField;
            }
            set {
                if ((this.CalculationDensityField.Equals(value) != true)) {
                    this.CalculationDensityField = value;
                    this.RaisePropertyChanged("CalculationDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FillingRequirement {
            get {
                return this.FillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.FillingRequirementField, value) != true)) {
                    this.FillingRequirementField = value;
                    this.RaisePropertyChanged("FillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrainSize {
            get {
                return this.GrainSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GrainSizeField, value) != true)) {
                    this.GrainSizeField = value;
                    this.RaisePropertyChanged("GrainSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineRequirement {
            get {
                return this.MachineRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineRequirementField, value) != true)) {
                    this.MachineRequirementField = value;
                    this.RaisePropertyChanged("MachineRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MillingRequirement {
            get {
                return this.MillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MillingRequirementField, value) != true)) {
                    this.MillingRequirementField = value;
                    this.RaisePropertyChanged("MillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCode {
            get {
                return this.ProcessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCodeField, value) != true)) {
                    this.ProcessCodeField = value;
                    this.RaisePropertyChanged("ProcessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomHumidity {
            get {
                return this.RoomHumidityField;
            }
            set {
                if ((this.RoomHumidityField.Equals(value) != true)) {
                    this.RoomHumidityField = value;
                    this.RaisePropertyChanged("RoomHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomTemperature {
            get {
                return this.RoomTemperatureField;
            }
            set {
                if ((this.RoomTemperatureField.Equals(value) != true)) {
                    this.RoomTemperatureField = value;
                    this.RaisePropertyChanged("RoomTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPRequirement {
            get {
                return this.VHPRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPRequirementField, value) != true)) {
                    this.VHPRequirementField = value;
                    this.RaisePropertyChanged("VHPRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialNeed", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialNeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialNeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialNeeds {
            get {
                return this.SpecialNeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialNeedsField, value) != true)) {
                    this.SpecialNeedsField = value;
                    this.RaisePropertyChanged("SpecialNeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrder", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSLargeScreen.PMSMainService.DcMaterialOrderItem[] MaterialOrderItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShipFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierReceiverField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSLargeScreen.PMSMainService.DcMaterialOrderItem[] MaterialOrderItems {
            get {
                return this.MaterialOrderItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialOrderItemsField, value) != true)) {
                    this.MaterialOrderItemsField = value;
                    this.RaisePropertyChanged("MaterialOrderItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPO {
            get {
                return this.OrderPOField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPOField, value) != true)) {
                    this.OrderPOField = value;
                    this.RaisePropertyChanged("OrderPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShipFee {
            get {
                return this.ShipFeeField;
            }
            set {
                if ((this.ShipFeeField.Equals(value) != true)) {
                    this.ShipFeeField = value;
                    this.RaisePropertyChanged("ShipFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAbbr {
            get {
                return this.SupplierAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAbbrField, value) != true)) {
                    this.SupplierAbbrField = value;
                    this.RaisePropertyChanged("SupplierAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierAddress {
            get {
                return this.SupplierAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAddressField, value) != true)) {
                    this.SupplierAddressField = value;
                    this.RaisePropertyChanged("SupplierAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierEmail {
            get {
                return this.SupplierEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierEmailField, value) != true)) {
                    this.SupplierEmailField = value;
                    this.RaisePropertyChanged("SupplierEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierReceiver {
            get {
                return this.SupplierReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierReceiverField, value) != true)) {
                    this.SupplierReceiverField = value;
                    this.RaisePropertyChanged("SupplierReceiver");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMaterialOrderItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMaterialOrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MaterialOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvideRawMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MaterialOrderID {
            get {
                return this.MaterialOrderIDField;
            }
            set {
                if ((this.MaterialOrderIDField.Equals(value) != true)) {
                    this.MaterialOrderIDField = value;
                    this.RaisePropertyChanged("MaterialOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkNumber {
            get {
                return this.PMIWorkNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkNumberField, value) != true)) {
                    this.PMIWorkNumberField = value;
                    this.RaisePropertyChanged("PMIWorkNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvideRawMaterial {
            get {
                return this.ProvideRawMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvideRawMaterialField, value) != true)) {
                    this.ProvideRawMaterialField = value;
                    this.RaisePropertyChanged("ProvideRawMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordTestResult", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordTestResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionXRFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionAbbr {
            get {
                return this.CompositionAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionAbbrField, value) != true)) {
                    this.CompositionAbbrField = value;
                    this.RaisePropertyChanged("CompositionAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionXRF {
            get {
                return this.CompositionXRFField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionXRFField, value) != true)) {
                    this.CompositionXRFField = value;
                    this.RaisePropertyChanged("CompositionXRF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Density {
            get {
                return this.DensityField;
            }
            set {
                if ((object.ReferenceEquals(this.DensityField, value) != true)) {
                    this.DensityField = value;
                    this.RaisePropertyChanged("Density");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionActual {
            get {
                return this.DimensionActualField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionActualField, value) != true)) {
                    this.DimensionActualField = value;
                    this.RaisePropertyChanged("DimensionActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resistance {
            get {
                return this.ResistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResistanceField, value) != true)) {
                    this.ResistanceField = value;
                    this.RaisePropertyChanged("Resistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sample {
            get {
                return this.SampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleField, value) != true)) {
                    this.SampleField = value;
                    this.RaisePropertyChanged("Sample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestType {
            get {
                return this.TestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TestTypeField, value) != true)) {
                    this.TestTypeField = value;
                    this.RaisePropertyChanged("TestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcMissonWithPlan", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcMissonWithPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalculationDensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositoinAbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrainSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MillingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinimumAcceptDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomHumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RoomTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SampleNeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPPlanRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalculationDensity {
            get {
                return this.CalculationDensityField;
            }
            set {
                if ((this.CalculationDensityField.Equals(value) != true)) {
                    this.CalculationDensityField = value;
                    this.RaisePropertyChanged("CalculationDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionOriginal {
            get {
                return this.CompositionOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionOriginalField, value) != true)) {
                    this.CompositionOriginalField = value;
                    this.RaisePropertyChanged("CompositionOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositionStandard {
            get {
                return this.CompositionStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionStandardField, value) != true)) {
                    this.CompositionStandardField = value;
                    this.RaisePropertyChanged("CompositionStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompositoinAbbr {
            get {
                return this.CompositoinAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositoinAbbrField, value) != true)) {
                    this.CompositoinAbbrField = value;
                    this.RaisePropertyChanged("CompositoinAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDetails {
            get {
                return this.DimensionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDetailsField, value) != true)) {
                    this.DimensionDetailsField = value;
                    this.RaisePropertyChanged("DimensionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FillingRequirement {
            get {
                return this.FillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.FillingRequirementField, value) != true)) {
                    this.FillingRequirementField = value;
                    this.RaisePropertyChanged("FillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrainSize {
            get {
                return this.GrainSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GrainSizeField, value) != true)) {
                    this.GrainSizeField = value;
                    this.RaisePropertyChanged("GrainSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineRequirement {
            get {
                return this.MachineRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineRequirementField, value) != true)) {
                    this.MachineRequirementField = value;
                    this.RaisePropertyChanged("MachineRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MillingRequirement {
            get {
                return this.MillingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.MillingRequirementField, value) != true)) {
                    this.MillingRequirementField = value;
                    this.RaisePropertyChanged("MillingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinimumAcceptDefect {
            get {
                return this.MinimumAcceptDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.MinimumAcceptDefectField, value) != true)) {
                    this.MinimumAcceptDefectField = value;
                    this.RaisePropertyChanged("MinimumAcceptDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderRemark {
            get {
                return this.OrderRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRemarkField, value) != true)) {
                    this.OrderRemarkField = value;
                    this.RaisePropertyChanged("OrderRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessCode {
            get {
                return this.ProcessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessCodeField, value) != true)) {
                    this.ProcessCodeField = value;
                    this.RaisePropertyChanged("ProcessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purity {
            get {
                return this.PurityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurityField, value) != true)) {
                    this.PurityField = value;
                    this.RaisePropertyChanged("Purity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityUnit {
            get {
                return this.QuantityUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityUnitField, value) != true)) {
                    this.QuantityUnitField = value;
                    this.RaisePropertyChanged("QuantityUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomHumidity {
            get {
                return this.RoomHumidityField;
            }
            set {
                if ((this.RoomHumidityField.Equals(value) != true)) {
                    this.RoomHumidityField = value;
                    this.RaisePropertyChanged("RoomHumidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RoomTemperature {
            get {
                return this.RoomTemperatureField;
            }
            set {
                if ((this.RoomTemperatureField.Equals(value) != true)) {
                    this.RoomTemperatureField = value;
                    this.RaisePropertyChanged("RoomTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleNeed {
            get {
                return this.SampleNeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleNeedField, value) != true)) {
                    this.SampleNeedField = value;
                    this.RaisePropertyChanged("SampleNeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialRequirement {
            get {
                return this.SpecialRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialRequirementField, value) != true)) {
                    this.SpecialRequirementField = value;
                    this.RaisePropertyChanged("SpecialRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetQuantity {
            get {
                return this.TargetQuantityField;
            }
            set {
                if ((this.TargetQuantityField.Equals(value) != true)) {
                    this.TargetQuantityField = value;
                    this.RaisePropertyChanged("TargetQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Thickness {
            get {
                return this.ThicknessField;
            }
            set {
                if ((this.ThicknessField.Equals(value) != true)) {
                    this.ThicknessField = value;
                    this.RaisePropertyChanged("Thickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPPlanRemark {
            get {
                return this.VHPPlanRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPPlanRemarkField, value) != true)) {
                    this.VHPPlanRemarkField = value;
                    this.RaisePropertyChanged("VHPPlanRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPRequirement {
            get {
                return this.VHPRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPRequirementField, value) != true)) {
                    this.VHPRequirementField = value;
                    this.RaisePropertyChanged("VHPRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordDelivery", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordDelivery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[] DeliveryItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShipTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[] DeliveryItems {
            get {
                return this.DeliveryItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryItemsField, value) != true)) {
                    this.DeliveryItemsField = value;
                    this.RaisePropertyChanged("DeliveryItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryName {
            get {
                return this.DeliveryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryNameField, value) != true)) {
                    this.DeliveryNameField = value;
                    this.RaisePropertyChanged("DeliveryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryNumber {
            get {
                return this.DeliveryNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryNumberField, value) != true)) {
                    this.DeliveryNumberField = value;
                    this.RaisePropertyChanged("DeliveryNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberField, value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageInformation {
            get {
                return this.PackageInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageInformationField, value) != true)) {
                    this.PackageInformationField = value;
                    this.RaisePropertyChanged("PackageInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageType {
            get {
                return this.PackageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageTypeField, value) != true)) {
                    this.PackageTypeField = value;
                    this.RaisePropertyChanged("PackageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShipTime {
            get {
                return this.ShipTimeField;
            }
            set {
                if ((this.ShipTimeField.Equals(value) != true)) {
                    this.ShipTimeField = value;
                    this.RaisePropertyChanged("ShipTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordDeliveryItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordDeliveryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeliveryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbr {
            get {
                return this.AbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbrField, value) != true)) {
                    this.AbbrField = value;
                    this.RaisePropertyChanged("Abbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeliveryID {
            get {
                return this.DeliveryIDField;
            }
            set {
                if ((this.DeliveryIDField.Equals(value) != true)) {
                    this.DeliveryIDField = value;
                    this.RaisePropertyChanged("DeliveryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailRecord {
            get {
                return this.DetailRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailRecordField, value) != true)) {
                    this.DetailRecordField = value;
                    this.RaisePropertyChanged("DetailRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordVHP", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordVHP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KeepTempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoldDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PlanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrePressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PreTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaccumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composition {
            get {
                return this.CompositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositionField, value) != true)) {
                    this.CompositionField = value;
                    this.RaisePropertyChanged("Composition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double KeepTempTime {
            get {
                return this.KeepTempTimeField;
            }
            set {
                if ((this.KeepTempTimeField.Equals(value) != true)) {
                    this.KeepTempTimeField = value;
                    this.RaisePropertyChanged("KeepTempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MoldDiameter {
            get {
                return this.MoldDiameterField;
            }
            set {
                if ((this.MoldDiameterField.Equals(value) != true)) {
                    this.MoldDiameterField = value;
                    this.RaisePropertyChanged("MoldDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PlanDate {
            get {
                return this.PlanDateField;
            }
            set {
                if ((this.PlanDateField.Equals(value) != true)) {
                    this.PlanDateField = value;
                    this.RaisePropertyChanged("PlanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrePressure {
            get {
                return this.PrePressureField;
            }
            set {
                if ((this.PrePressureField.Equals(value) != true)) {
                    this.PrePressureField = value;
                    this.RaisePropertyChanged("PrePressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PreTemperature {
            get {
                return this.PreTemperatureField;
            }
            set {
                if ((this.PreTemperatureField.Equals(value) != true)) {
                    this.PreTemperatureField = value;
                    this.RaisePropertyChanged("PreTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDeviceCode {
            get {
                return this.VHPDeviceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceCodeField, value) != true)) {
                    this.VHPDeviceCodeField = value;
                    this.RaisePropertyChanged("VHPDeviceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcRecordVHPItem", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcRecordVHPItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CurrentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OmegaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PV1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PV2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PV3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordVHPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Shift1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Shift2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaccumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WaterTemperatureInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WaterTemperatureOutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((this.CurrentTimeField.Equals(value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraInformation {
            get {
                return this.ExtraInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInformationField, value) != true)) {
                    this.ExtraInformationField = value;
                    this.RaisePropertyChanged("ExtraInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Omega {
            get {
                return this.OmegaField;
            }
            set {
                if ((this.OmegaField.Equals(value) != true)) {
                    this.OmegaField = value;
                    this.RaisePropertyChanged("Omega");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PV1 {
            get {
                return this.PV1Field;
            }
            set {
                if ((this.PV1Field.Equals(value) != true)) {
                    this.PV1Field = value;
                    this.RaisePropertyChanged("PV1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PV2 {
            get {
                return this.PV2Field;
            }
            set {
                if ((this.PV2Field.Equals(value) != true)) {
                    this.PV2Field = value;
                    this.RaisePropertyChanged("PV2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PV3 {
            get {
                return this.PV3Field;
            }
            set {
                if ((this.PV3Field.Equals(value) != true)) {
                    this.PV3Field = value;
                    this.RaisePropertyChanged("PV3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordVHPID {
            get {
                return this.RecordVHPIDField;
            }
            set {
                if ((this.RecordVHPIDField.Equals(value) != true)) {
                    this.RecordVHPIDField = value;
                    this.RaisePropertyChanged("RecordVHPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SV {
            get {
                return this.SVField;
            }
            set {
                if ((this.SVField.Equals(value) != true)) {
                    this.SVField = value;
                    this.RaisePropertyChanged("SV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Shift1 {
            get {
                return this.Shift1Field;
            }
            set {
                if ((this.Shift1Field.Equals(value) != true)) {
                    this.Shift1Field = value;
                    this.RaisePropertyChanged("Shift1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Shift2 {
            get {
                return this.Shift2Field;
            }
            set {
                if ((this.Shift2Field.Equals(value) != true)) {
                    this.Shift2Field = value;
                    this.RaisePropertyChanged("Shift2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ton {
            get {
                return this.TonField;
            }
            set {
                if ((this.TonField.Equals(value) != true)) {
                    this.TonField = value;
                    this.RaisePropertyChanged("Ton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vaccum {
            get {
                return this.VaccumField;
            }
            set {
                if ((this.VaccumField.Equals(value) != true)) {
                    this.VaccumField = value;
                    this.RaisePropertyChanged("Vaccum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WaterTemperatureIn {
            get {
                return this.WaterTemperatureInField;
            }
            set {
                if ((this.WaterTemperatureInField.Equals(value) != true)) {
                    this.WaterTemperatureInField = value;
                    this.RaisePropertyChanged("WaterTemperatureIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WaterTemperatureOut {
            get {
                return this.WaterTemperatureOutField;
            }
            set {
                if ((this.WaterTemperatureOutField.Equals(value) != true)) {
                    this.WaterTemperatureOutField = value;
                    this.RaisePropertyChanged("WaterTemperatureOut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDCustomer", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDDeliveryAddress", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDDeliveryAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPDevice", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPDevice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighestTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeName {
            get {
                return this.CodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeNameField, value) != true)) {
                    this.CodeNameField = value;
                    this.RaisePropertyChanged("CodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceInformation {
            get {
                return this.DeviceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInformationField, value) != true)) {
                    this.DeviceInformationField = value;
                    this.RaisePropertyChanged("DeviceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestDiameter {
            get {
                return this.HighestDiameterField;
            }
            set {
                if ((this.HighestDiameterField.Equals(value) != true)) {
                    this.HighestDiameterField = value;
                    this.RaisePropertyChanged("HighestDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestPressure {
            get {
                return this.HighestPressureField;
            }
            set {
                if ((this.HighestPressureField.Equals(value) != true)) {
                    this.HighestPressureField = value;
                    this.RaisePropertyChanged("HighestPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighestTemperature {
            get {
                return this.HighestTemperatureField;
            }
            set {
                if ((this.HighestTemperatureField.Equals(value) != true)) {
                    this.HighestTemperatureField = value;
                    this.RaisePropertyChanged("HighestTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveTimeField, value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPMold", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPMold : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InnerDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ModelHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InnerDiameter {
            get {
                return this.InnerDiameterField;
            }
            set {
                if ((this.InnerDiameterField.Equals(value) != true)) {
                    this.InnerDiameterField = value;
                    this.RaisePropertyChanged("InnerDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ModelHeight {
            get {
                return this.ModelHeightField;
            }
            set {
                if ((this.ModelHeightField.Equals(value) != true)) {
                    this.ModelHeightField = value;
                    this.RaisePropertyChanged("ModelHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldDetails {
            get {
                return this.MoldDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldDetailsField, value) != true)) {
                    this.MoldDetailsField = value;
                    this.RaisePropertyChanged("MoldDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldType {
            get {
                return this.MoldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeField, value) != true)) {
                    this.MoldTypeField = value;
                    this.RaisePropertyChanged("MoldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDVHPProcess", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDVHPProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMeaningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMeaning {
            get {
                return this.CodeMeaningField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMeaningField, value) != true)) {
                    this.CodeMeaningField = value;
                    this.RaisePropertyChanged("CodeMeaning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeName {
            get {
                return this.CodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeNameField, value) != true)) {
                    this.CodeNameField = value;
                    this.RaisePropertyChanged("CodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDCompound", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDCompound : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoilingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DensityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeltingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoilingPoint {
            get {
                return this.BoilingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.BoilingPointField, value) != true)) {
                    this.BoilingPointField = value;
                    this.RaisePropertyChanged("BoilingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Density {
            get {
                return this.DensityField;
            }
            set {
                if ((this.DensityField.Equals(value) != true)) {
                    this.DensityField = value;
                    this.RaisePropertyChanged("Density");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InformationSource {
            get {
                return this.InformationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationSourceField, value) != true)) {
                    this.InformationSourceField = value;
                    this.RaisePropertyChanged("InformationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeltingPoint {
            get {
                return this.MeltingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.MeltingPointField, value) != true)) {
                    this.MeltingPointField = value;
                    this.RaisePropertyChanged("MeltingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialProperty {
            get {
                return this.SpecialPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialPropertyField, value) != true)) {
                    this.SpecialPropertyField = value;
                    this.RaisePropertyChanged("SpecialProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DcBDSupplier", Namespace="http://schemas.datacontract.org/2004/07/PMSWCFService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DcBDSupplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbr {
            get {
                return this.AbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbrField, value) != true)) {
                    this.AbbrField = value;
                    this.RaisePropertyChanged("Abbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        PMSLargeScreen.PMSMainService.DcOrder[] GetAllOrderInPage(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrderInPage", ReplyAction="http://tempuri.org/IOrderService/GetAllOrderInPageResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetAllOrderInPageAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        PMSLargeScreen.PMSMainService.DcOrder[] GetOrderBySearchInPage(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderBySearchInPage", ReplyAction="http://tempuri.org/IOrderService/GetOrderBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        int GetOrderCountBySearch(string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderCountBySearch", ReplyAction="http://tempuri.org/IOrderService/GetOrderCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(string customer, string compositionstd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        int AddOrder(PMSLargeScreen.PMSMainService.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(PMSLargeScreen.PMSMainService.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        int UpdateOrder(PMSLargeScreen.PMSMainService.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSLargeScreen.PMSMainService.DcOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        int DeleteOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : PMSLargeScreen.PMSMainService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IOrderService>, PMSLargeScreen.PMSMainService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcOrder[] GetAllOrderInPage(int skip, int take) {
            return base.Channel.GetAllOrderInPage(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetAllOrderInPageAsync(int skip, int take) {
            return base.Channel.GetAllOrderInPageAsync(skip, take);
        }
        
        public PMSLargeScreen.PMSMainService.DcOrder[] GetOrderBySearchInPage(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPage(skip, take, customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetOrderBySearchInPageAsync(int skip, int take, string customer, string compositionstd) {
            return base.Channel.GetOrderBySearchInPageAsync(skip, take, customer, compositionstd);
        }
        
        public int GetOrderCountBySearch(string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearch(customer, compositionstd);
        }
        
        public System.Threading.Tasks.Task<int> GetOrderCountBySearchAsync(string customer, string compositionstd) {
            return base.Channel.GetOrderCountBySearchAsync(customer, compositionstd);
        }
        
        public int AddOrder(PMSLargeScreen.PMSMainService.DcOrder order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(PMSLargeScreen.PMSMainService.DcOrder order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public int UpdateOrder(PMSLargeScreen.PMSMainService.DcOrder order) {
            return base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(PMSLargeScreen.PMSMainService.DcOrder order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public int DeleteOrder(System.Guid id) {
            return base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(System.Guid id) {
            return base.Channel.DeleteOrderAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IPlanVHPService")]
    public interface IPlanVHPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderID", ReplyAction="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderIDResponse")]
        PMSLargeScreen.PMSMainService.DcPlanVHP[] GetVHPPlansByOrderID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderID", ReplyAction="http://tempuri.org/IPlanVHPService/GetVHPPlansByOrderIDResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcPlanVHP[]> GetVHPPlansByOrderIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/AddVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/AddVHPPlanResponse")]
        int AddVHPPlan(PMSLargeScreen.PMSMainService.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/AddVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/AddVHPPlanResponse")]
        System.Threading.Tasks.Task<int> AddVHPPlanAsync(PMSLargeScreen.PMSMainService.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/UpdateVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/UpdateVHPPlanResponse")]
        int UpdateVHPPlan(PMSLargeScreen.PMSMainService.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/UpdateVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/UpdateVHPPlanResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPPlanAsync(PMSLargeScreen.PMSMainService.DcPlanVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/DeleteVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/DeleteVHPPlanResponse")]
        int DeleteVHPPlan(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanVHPService/DeleteVHPPlan", ReplyAction="http://tempuri.org/IPlanVHPService/DeleteVHPPlanResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPPlanAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanVHPServiceChannel : PMSLargeScreen.PMSMainService.IPlanVHPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanVHPServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IPlanVHPService>, PMSLargeScreen.PMSMainService.IPlanVHPService {
        
        public PlanVHPServiceClient() {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanVHPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanVHPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcPlanVHP[] GetVHPPlansByOrderID(System.Guid id) {
            return base.Channel.GetVHPPlansByOrderID(id);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcPlanVHP[]> GetVHPPlansByOrderIDAsync(System.Guid id) {
            return base.Channel.GetVHPPlansByOrderIDAsync(id);
        }
        
        public int AddVHPPlan(PMSLargeScreen.PMSMainService.DcPlanVHP model) {
            return base.Channel.AddVHPPlan(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPPlanAsync(PMSLargeScreen.PMSMainService.DcPlanVHP model) {
            return base.Channel.AddVHPPlanAsync(model);
        }
        
        public int UpdateVHPPlan(PMSLargeScreen.PMSMainService.DcPlanVHP model) {
            return base.Channel.UpdateVHPPlan(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPPlanAsync(PMSLargeScreen.PMSMainService.DcPlanVHP model) {
            return base.Channel.UpdateVHPPlanAsync(model);
        }
        
        public int DeleteVHPPlan(System.Guid id) {
            return base.Channel.DeleteVHPPlan(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPPlanAsync(System.Guid id) {
            return base.Channel.DeleteVHPPlanAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IMaterialNeedService")]
    public interface IMaterialNeedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPage", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPageResponse")]
        PMSLargeScreen.PMSMainService.DcMaterialNeed[] GetMaterialNeedBySearchInPage(int skip, int take, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPage", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialNeed[]> GetMaterialNeedBySearchInPageAsync(int skip, int take, string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearch", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearchResponse")]
        int GetMaterialNeedCountBySearch(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearch", ReplyAction="http://tempuri.org/IMaterialNeedService/GetMaterialNeedCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMaterialNeedCountBySearchAsync(string composition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/AddMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/AddMaterialNeedResponse")]
        int AddMaterialNeed(PMSLargeScreen.PMSMainService.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/AddMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/AddMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> AddMaterialNeedAsync(PMSLargeScreen.PMSMainService.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeedResponse")]
        int UpdateMaterialNeed(PMSLargeScreen.PMSMainService.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/UpdateMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialNeedAsync(PMSLargeScreen.PMSMainService.DcMaterialNeed model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeedResponse")]
        int DeleteMaterialNeed(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeed", ReplyAction="http://tempuri.org/IMaterialNeedService/DeleteMaterialNeedResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialNeedAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialNeedServiceChannel : PMSLargeScreen.PMSMainService.IMaterialNeedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialNeedServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IMaterialNeedService>, PMSLargeScreen.PMSMainService.IMaterialNeedService {
        
        public MaterialNeedServiceClient() {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialNeedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialNeedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcMaterialNeed[] GetMaterialNeedBySearchInPage(int skip, int take, string composition) {
            return base.Channel.GetMaterialNeedBySearchInPage(skip, take, composition);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialNeed[]> GetMaterialNeedBySearchInPageAsync(int skip, int take, string composition) {
            return base.Channel.GetMaterialNeedBySearchInPageAsync(skip, take, composition);
        }
        
        public int GetMaterialNeedCountBySearch(string composition) {
            return base.Channel.GetMaterialNeedCountBySearch(composition);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialNeedCountBySearchAsync(string composition) {
            return base.Channel.GetMaterialNeedCountBySearchAsync(composition);
        }
        
        public int AddMaterialNeed(PMSLargeScreen.PMSMainService.DcMaterialNeed model) {
            return base.Channel.AddMaterialNeed(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialNeedAsync(PMSLargeScreen.PMSMainService.DcMaterialNeed model) {
            return base.Channel.AddMaterialNeedAsync(model);
        }
        
        public int UpdateMaterialNeed(PMSLargeScreen.PMSMainService.DcMaterialNeed model) {
            return base.Channel.UpdateMaterialNeed(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialNeedAsync(PMSLargeScreen.PMSMainService.DcMaterialNeed model) {
            return base.Channel.UpdateMaterialNeedAsync(model);
        }
        
        public int DeleteMaterialNeed(System.Guid id) {
            return base.Channel.DeleteMaterialNeed(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialNeedAsync(System.Guid id) {
            return base.Channel.DeleteMaterialNeedAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IMaterialOrderService")]
    public interface IMaterialOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPage", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPageResponse")]
        PMSLargeScreen.PMSMainService.DcMaterialOrder[] GetMaterialOrderBySearchInPage(int skip, int take, string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPage", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialOrder[]> GetMaterialOrderBySearchInPageAsync(int skip, int take, string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearch", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearchResponse")]
        int GetMaterialOrderCountBySearch(string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearch", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMaterialOrderCountBySearchAsync(string orderPo, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderResponse")]
        int AddMaterialOrder(PMSLargeScreen.PMSMainService.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> AddMaterialOrderAsync(PMSLargeScreen.PMSMainService.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderResponse")]
        int UpdateMaterialOrder(PMSLargeScreen.PMSMainService.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialOrderAsync(PMSLargeScreen.PMSMainService.DcMaterialOrder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderResponse")]
        int DeleteMaterialOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrder", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialOrderAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialIDResponse" +
            "")]
        PMSLargeScreen.PMSMainService.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialID", ReplyAction="http://tempuri.org/IMaterialOrderService/GetMaterialOrderItembyMaterialIDResponse" +
            "")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItemResponse")]
        int AddMaterialOrderItem(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/AddMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> AddMaterialOrderItemAsync(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItemResponse")]
        int UpdateMaterialOrderItem(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/UpdateMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItemResponse")]
        int DeleteMaterialOrderItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItem", ReplyAction="http://tempuri.org/IMaterialOrderService/DeleteMaterialOrderItemResponse")]
        System.Threading.Tasks.Task<int> DeleteMaterialOrderItemAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialOrderServiceChannel : PMSLargeScreen.PMSMainService.IMaterialOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialOrderServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IMaterialOrderService>, PMSLargeScreen.PMSMainService.IMaterialOrderService {
        
        public MaterialOrderServiceClient() {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcMaterialOrder[] GetMaterialOrderBySearchInPage(int skip, int take, string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderBySearchInPage(skip, take, orderPo, supplier);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialOrder[]> GetMaterialOrderBySearchInPageAsync(int skip, int take, string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderBySearchInPageAsync(skip, take, orderPo, supplier);
        }
        
        public int GetMaterialOrderCountBySearch(string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderCountBySearch(orderPo, supplier);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialOrderCountBySearchAsync(string orderPo, string supplier) {
            return base.Channel.GetMaterialOrderCountBySearchAsync(orderPo, supplier);
        }
        
        public int AddMaterialOrder(PMSLargeScreen.PMSMainService.DcMaterialOrder model) {
            return base.Channel.AddMaterialOrder(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialOrderAsync(PMSLargeScreen.PMSMainService.DcMaterialOrder model) {
            return base.Channel.AddMaterialOrderAsync(model);
        }
        
        public int UpdateMaterialOrder(PMSLargeScreen.PMSMainService.DcMaterialOrder model) {
            return base.Channel.UpdateMaterialOrder(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialOrderAsync(PMSLargeScreen.PMSMainService.DcMaterialOrder model) {
            return base.Channel.UpdateMaterialOrderAsync(model);
        }
        
        public int DeleteMaterialOrder(System.Guid id) {
            return base.Channel.DeleteMaterialOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialOrderAsync(System.Guid id) {
            return base.Channel.DeleteMaterialOrderAsync(id);
        }
        
        public PMSLargeScreen.PMSMainService.DcMaterialOrderItem[] GetMaterialOrderItembyMaterialID(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialID(id);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMaterialOrderItem[]> GetMaterialOrderItembyMaterialIDAsync(System.Guid id) {
            return base.Channel.GetMaterialOrderItembyMaterialIDAsync(id);
        }
        
        public int AddMaterialOrderItem(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model) {
            return base.Channel.AddMaterialOrderItem(model);
        }
        
        public System.Threading.Tasks.Task<int> AddMaterialOrderItemAsync(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model) {
            return base.Channel.AddMaterialOrderItemAsync(model);
        }
        
        public int UpdateMaterialOrderItem(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model) {
            return base.Channel.UpdateMaterialOrderItem(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMaterialOrderItemAsync(PMSLargeScreen.PMSMainService.DcMaterialOrderItem model) {
            return base.Channel.UpdateMaterialOrderItemAsync(model);
        }
        
        public int DeleteMaterialOrderItem(System.Guid id) {
            return base.Channel.DeleteMaterialOrderItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMaterialOrderItemAsync(System.Guid id) {
            return base.Channel.DeleteMaterialOrderItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IMissonService")]
    public interface IMissonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonBySearchInPage", ReplyAction="http://tempuri.org/IMissonService/GetMissonBySearchInPageResponse")]
        PMSLargeScreen.PMSMainService.DcOrder[] GetMissonBySearchInPage(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonBySearchInPage", ReplyAction="http://tempuri.org/IMissonService/GetMissonBySearchInPageResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetMissonBySearchInPageAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetPlansByOrderID", ReplyAction="http://tempuri.org/IMissonService/GetPlansByOrderIDResponse")]
        PMSLargeScreen.PMSMainService.DcPlanVHP[] GetPlansByOrderID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetPlansByOrderID", ReplyAction="http://tempuri.org/IMissonService/GetPlansByOrderIDResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcPlanVHP[]> GetPlansByOrderIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonCountBySearch", ReplyAction="http://tempuri.org/IMissonService/GetMissonCountBySearchResponse")]
        int GetMissonCountBySearch();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonService/GetMissonCountBySearch", ReplyAction="http://tempuri.org/IMissonService/GetMissonCountBySearchResponse")]
        System.Threading.Tasks.Task<int> GetMissonCountBySearchAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMissonServiceChannel : PMSLargeScreen.PMSMainService.IMissonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MissonServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IMissonService>, PMSLargeScreen.PMSMainService.IMissonService {
        
        public MissonServiceClient() {
        }
        
        public MissonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MissonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcOrder[] GetMissonBySearchInPage(int skip, int take) {
            return base.Channel.GetMissonBySearchInPage(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcOrder[]> GetMissonBySearchInPageAsync(int skip, int take) {
            return base.Channel.GetMissonBySearchInPageAsync(skip, take);
        }
        
        public PMSLargeScreen.PMSMainService.DcPlanVHP[] GetPlansByOrderID(System.Guid id) {
            return base.Channel.GetPlansByOrderID(id);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcPlanVHP[]> GetPlansByOrderIDAsync(System.Guid id) {
            return base.Channel.GetPlansByOrderIDAsync(id);
        }
        
        public int GetMissonCountBySearch() {
            return base.Channel.GetMissonCountBySearch();
        }
        
        public System.Threading.Tasks.Task<int> GetMissonCountBySearchAsync() {
            return base.Channel.GetMissonCountBySearchAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IRecordTestResultService")]
    public interface IRecordTestResultService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/GetRecordTestResultBySearchInPage", ReplyAction="http://tempuri.org/IRecordTestResultService/GetRecordTestResultBySearchInPageResp" +
            "onse")]
        PMSLargeScreen.PMSMainService.DcRecordTestResult[] GetRecordTestResultBySearchInPage(int skip, int take, string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/GetRecordTestResultBySearchInPage", ReplyAction="http://tempuri.org/IRecordTestResultService/GetRecordTestResultBySearchInPageResp" +
            "onse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordTestResult[]> GetRecordTestResultBySearchInPageAsync(int skip, int take, string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/GetRecordTestResultCountBySearchInPag" +
            "e", ReplyAction="http://tempuri.org/IRecordTestResultService/GetRecordTestResultCountBySearchInPag" +
            "eResponse")]
        int GetRecordTestResultCountBySearchInPage(string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/GetRecordTestResultCountBySearchInPag" +
            "e", ReplyAction="http://tempuri.org/IRecordTestResultService/GetRecordTestResultCountBySearchInPag" +
            "eResponse")]
        System.Threading.Tasks.Task<int> GetRecordTestResultCountBySearchInPageAsync(string productId, string compositionStd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/AddRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/AddRecordTestResultResponse")]
        int AddRecordTestResult(PMSLargeScreen.PMSMainService.DcRecordTestResult model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/AddRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/AddRecordTestResultResponse")]
        System.Threading.Tasks.Task<int> AddRecordTestResultAsync(PMSLargeScreen.PMSMainService.DcRecordTestResult model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/UpdateRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/UpdateRecordTestResultResponse")]
        int UpdateRecordTestResult(PMSLargeScreen.PMSMainService.DcRecordTestResult model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/UpdateRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/UpdateRecordTestResultResponse")]
        System.Threading.Tasks.Task<int> UpdateRecordTestResultAsync(PMSLargeScreen.PMSMainService.DcRecordTestResult model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/DeleteRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/DeleteRecordTestResultResponse")]
        int DeleteRecordTestResult(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordTestResultService/DeleteRecordTestResult", ReplyAction="http://tempuri.org/IRecordTestResultService/DeleteRecordTestResultResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordTestResultAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordTestResultServiceChannel : PMSLargeScreen.PMSMainService.IRecordTestResultService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordTestResultServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IRecordTestResultService>, PMSLargeScreen.PMSMainService.IRecordTestResultService {
        
        public RecordTestResultServiceClient() {
        }
        
        public RecordTestResultServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordTestResultServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordTestResultServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordTestResultServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordTestResult[] GetRecordTestResultBySearchInPage(int skip, int take, string productId, string compositionStd) {
            return base.Channel.GetRecordTestResultBySearchInPage(skip, take, productId, compositionStd);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordTestResult[]> GetRecordTestResultBySearchInPageAsync(int skip, int take, string productId, string compositionStd) {
            return base.Channel.GetRecordTestResultBySearchInPageAsync(skip, take, productId, compositionStd);
        }
        
        public int GetRecordTestResultCountBySearchInPage(string productId, string compositionStd) {
            return base.Channel.GetRecordTestResultCountBySearchInPage(productId, compositionStd);
        }
        
        public System.Threading.Tasks.Task<int> GetRecordTestResultCountBySearchInPageAsync(string productId, string compositionStd) {
            return base.Channel.GetRecordTestResultCountBySearchInPageAsync(productId, compositionStd);
        }
        
        public int AddRecordTestResult(PMSLargeScreen.PMSMainService.DcRecordTestResult model) {
            return base.Channel.AddRecordTestResult(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordTestResultAsync(PMSLargeScreen.PMSMainService.DcRecordTestResult model) {
            return base.Channel.AddRecordTestResultAsync(model);
        }
        
        public int UpdateRecordTestResult(PMSLargeScreen.PMSMainService.DcRecordTestResult model) {
            return base.Channel.UpdateRecordTestResult(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRecordTestResultAsync(PMSLargeScreen.PMSMainService.DcRecordTestResult model) {
            return base.Channel.UpdateRecordTestResultAsync(model);
        }
        
        public int DeleteRecordTestResult(System.Guid id) {
            return base.Channel.DeleteRecordTestResult(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordTestResultAsync(System.Guid id) {
            return base.Channel.DeleteRecordTestResultAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IMissonWithPlanService")]
    public interface IMissonWithPlanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlan", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanResponse")]
        PMSLargeScreen.PMSMainService.DcMissonWithPlan[] GetMissonWithPlan(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlan", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMissonWithPlan[]> GetMissonWithPlanAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCount", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCountResponse")]
        int GetMissonWithPlanCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCount", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanCountResponse")]
        System.Threading.Tasks.Task<int> GetMissonWithPlanCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDate", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDateResponse")]
        PMSLargeScreen.PMSMainService.DcMissonWithPlan[] GetMissonWithPlanByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDate", ReplyAction="http://tempuri.org/IMissonWithPlanService/GetMissonWithPlanByDateResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMissonWithPlan[]> GetMissonWithPlanByDateAsync(System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMissonWithPlanServiceChannel : PMSLargeScreen.PMSMainService.IMissonWithPlanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MissonWithPlanServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IMissonWithPlanService>, PMSLargeScreen.PMSMainService.IMissonWithPlanService {
        
        public MissonWithPlanServiceClient() {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonWithPlanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MissonWithPlanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcMissonWithPlan[] GetMissonWithPlan(int skip, int take) {
            return base.Channel.GetMissonWithPlan(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMissonWithPlan[]> GetMissonWithPlanAsync(int skip, int take) {
            return base.Channel.GetMissonWithPlanAsync(skip, take);
        }
        
        public int GetMissonWithPlanCount() {
            return base.Channel.GetMissonWithPlanCount();
        }
        
        public System.Threading.Tasks.Task<int> GetMissonWithPlanCountAsync() {
            return base.Channel.GetMissonWithPlanCountAsync();
        }
        
        public PMSLargeScreen.PMSMainService.DcMissonWithPlan[] GetMissonWithPlanByDate(System.DateTime date) {
            return base.Channel.GetMissonWithPlanByDate(date);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcMissonWithPlan[]> GetMissonWithPlanByDateAsync(System.DateTime date) {
            return base.Channel.GetMissonWithPlanByDateAsync(date);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IRecordDeliveryService")]
    public interface IRecordDeliveryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryResponse")]
        PMSLargeScreen.PMSMainService.DcRecordDelivery[] GetDelivery(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordDelivery[]> GetDeliveryAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDeliveryCount", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryCountResponse")]
        int GetDeliveryCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetDeliveryCount", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetDeliveryCountResponse")]
        System.Threading.Tasks.Task<int> GetDeliveryCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryResponse")]
        int AddRecordDelivery(PMSLargeScreen.PMSMainService.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryResponse")]
        System.Threading.Tasks.Task<int> AddRecordDeliveryAsync(PMSLargeScreen.PMSMainService.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryResponse")]
        int UpdateReocrdDelivery(PMSLargeScreen.PMSMainService.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdDeliveryAsync(PMSLargeScreen.PMSMainService.DcRecordDelivery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryResponse")]
        int DeleteRecordDelivery(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDelivery", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordDeliveryAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetRecordDeliveryItemByRecordDeliveryID" +
            "", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetRecordDeliveryItemByRecordDeliveryID" +
            "Response")]
        PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[] GetRecordDeliveryItemByRecordDeliveryID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/GetRecordDeliveryItemByRecordDeliveryID" +
            "", ReplyAction="http://tempuri.org/IRecordDeliveryService/GetRecordDeliveryItemByRecordDeliveryID" +
            "Response")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[]> GetRecordDeliveryItemByRecordDeliveryIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItemResponse")]
        int AddRecordDeliveryItem(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/AddRecordDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> AddRecordDeliveryItemAsync(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItemResponse")]
        int UpdateReocrdDeliveryItem(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/UpdateReocrdDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdDeliveryItemAsync(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItemResponse")]
        int DeleteRecordDeliveryItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItem", ReplyAction="http://tempuri.org/IRecordDeliveryService/DeleteRecordDeliveryItemResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordDeliveryItemAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordDeliveryServiceChannel : PMSLargeScreen.PMSMainService.IRecordDeliveryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordDeliveryServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IRecordDeliveryService>, PMSLargeScreen.PMSMainService.IRecordDeliveryService {
        
        public RecordDeliveryServiceClient() {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordDeliveryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordDeliveryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordDelivery[] GetDelivery(int skip, int take) {
            return base.Channel.GetDelivery(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordDelivery[]> GetDeliveryAsync(int skip, int take) {
            return base.Channel.GetDeliveryAsync(skip, take);
        }
        
        public int GetDeliveryCount() {
            return base.Channel.GetDeliveryCount();
        }
        
        public System.Threading.Tasks.Task<int> GetDeliveryCountAsync() {
            return base.Channel.GetDeliveryCountAsync();
        }
        
        public int AddRecordDelivery(PMSLargeScreen.PMSMainService.DcRecordDelivery model) {
            return base.Channel.AddRecordDelivery(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordDeliveryAsync(PMSLargeScreen.PMSMainService.DcRecordDelivery model) {
            return base.Channel.AddRecordDeliveryAsync(model);
        }
        
        public int UpdateReocrdDelivery(PMSLargeScreen.PMSMainService.DcRecordDelivery model) {
            return base.Channel.UpdateReocrdDelivery(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdDeliveryAsync(PMSLargeScreen.PMSMainService.DcRecordDelivery model) {
            return base.Channel.UpdateReocrdDeliveryAsync(model);
        }
        
        public int DeleteRecordDelivery(System.Guid id) {
            return base.Channel.DeleteRecordDelivery(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordDeliveryAsync(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryAsync(id);
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[] GetRecordDeliveryItemByRecordDeliveryID(System.Guid id) {
            return base.Channel.GetRecordDeliveryItemByRecordDeliveryID(id);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordDeliveryItem[]> GetRecordDeliveryItemByRecordDeliveryIDAsync(System.Guid id) {
            return base.Channel.GetRecordDeliveryItemByRecordDeliveryIDAsync(id);
        }
        
        public int AddRecordDeliveryItem(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model) {
            return base.Channel.AddRecordDeliveryItem(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordDeliveryItemAsync(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model) {
            return base.Channel.AddRecordDeliveryItemAsync(model);
        }
        
        public int UpdateReocrdDeliveryItem(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model) {
            return base.Channel.UpdateReocrdDeliveryItem(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdDeliveryItemAsync(PMSLargeScreen.PMSMainService.DcRecordDeliveryItem model) {
            return base.Channel.UpdateReocrdDeliveryItemAsync(model);
        }
        
        public int DeleteRecordDeliveryItem(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordDeliveryItemAsync(System.Guid id) {
            return base.Channel.DeleteRecordDeliveryItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IRecordVHPService")]
    public interface IRecordVHPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetTopRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/GetTopRecordVHPResponse")]
        PMSLargeScreen.PMSMainService.DcRecordVHP[] GetTopRecordVHP(int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetTopRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/GetTopRecordVHPResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHP[]> GetTopRecordVHPAsync(int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPResponse")]
        PMSLargeScreen.PMSMainService.DcRecordVHP[] GetRecordVHP(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHP[]> GetRecordVHPAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHPCount", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPCountResponse")]
        int GetRecordVHPCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHPCount", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPCountResponse")]
        System.Threading.Tasks.Task<int> GetRecordVHPCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHPItemsByRecrodVHPID", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPItemsByRecrodVHPIDResponse")]
        PMSLargeScreen.PMSMainService.DcRecordVHPItem[] GetRecordVHPItemsByRecrodVHPID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/GetRecordVHPItemsByRecrodVHPID", ReplyAction="http://tempuri.org/IRecordVHPService/GetRecordVHPItemsByRecrodVHPIDResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHPItem[]> GetRecordVHPItemsByRecrodVHPIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/AddRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/AddRecordVHPResponse")]
        int AddRecordVHP(PMSLargeScreen.PMSMainService.DcRecordVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/AddRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/AddRecordVHPResponse")]
        System.Threading.Tasks.Task<int> AddRecordVHPAsync(PMSLargeScreen.PMSMainService.DcRecordVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/UpdateReocrdVHP", ReplyAction="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPResponse")]
        int UpdateReocrdVHP(PMSLargeScreen.PMSMainService.DcRecordVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/UpdateReocrdVHP", ReplyAction="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdVHPAsync(PMSLargeScreen.PMSMainService.DcRecordVHP model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/DeleteRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/DeleteRecordVHPResponse")]
        int DeleteRecordVHP(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/DeleteRecordVHP", ReplyAction="http://tempuri.org/IRecordVHPService/DeleteRecordVHPResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordVHPAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/AddRecordVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/AddRecordVHPItemResponse")]
        int AddRecordVHPItem(PMSLargeScreen.PMSMainService.DcRecordVHPItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/AddRecordVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/AddRecordVHPItemResponse")]
        System.Threading.Tasks.Task<int> AddRecordVHPItemAsync(PMSLargeScreen.PMSMainService.DcRecordVHPItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPItemResponse")]
        int UpdateReocrdVHPItem(PMSLargeScreen.PMSMainService.DcRecordVHPItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/UpdateReocrdVHPItemResponse")]
        System.Threading.Tasks.Task<int> UpdateReocrdVHPItemAsync(PMSLargeScreen.PMSMainService.DcRecordVHPItem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/DeleteRecordVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/DeleteRecordVHPItemResponse")]
        int DeleteRecordVHPItem(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordVHPService/DeleteRecordVHPItem", ReplyAction="http://tempuri.org/IRecordVHPService/DeleteRecordVHPItemResponse")]
        System.Threading.Tasks.Task<int> DeleteRecordVHPItemAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordVHPServiceChannel : PMSLargeScreen.PMSMainService.IRecordVHPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordVHPServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IRecordVHPService>, PMSLargeScreen.PMSMainService.IRecordVHPService {
        
        public RecordVHPServiceClient() {
        }
        
        public RecordVHPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordVHPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordVHPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordVHPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordVHP[] GetTopRecordVHP(int top) {
            return base.Channel.GetTopRecordVHP(top);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHP[]> GetTopRecordVHPAsync(int top) {
            return base.Channel.GetTopRecordVHPAsync(top);
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordVHP[] GetRecordVHP(int skip, int take) {
            return base.Channel.GetRecordVHP(skip, take);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHP[]> GetRecordVHPAsync(int skip, int take) {
            return base.Channel.GetRecordVHPAsync(skip, take);
        }
        
        public int GetRecordVHPCount() {
            return base.Channel.GetRecordVHPCount();
        }
        
        public System.Threading.Tasks.Task<int> GetRecordVHPCountAsync() {
            return base.Channel.GetRecordVHPCountAsync();
        }
        
        public PMSLargeScreen.PMSMainService.DcRecordVHPItem[] GetRecordVHPItemsByRecrodVHPID(System.Guid id) {
            return base.Channel.GetRecordVHPItemsByRecrodVHPID(id);
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcRecordVHPItem[]> GetRecordVHPItemsByRecrodVHPIDAsync(System.Guid id) {
            return base.Channel.GetRecordVHPItemsByRecrodVHPIDAsync(id);
        }
        
        public int AddRecordVHP(PMSLargeScreen.PMSMainService.DcRecordVHP model) {
            return base.Channel.AddRecordVHP(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordVHPAsync(PMSLargeScreen.PMSMainService.DcRecordVHP model) {
            return base.Channel.AddRecordVHPAsync(model);
        }
        
        public int UpdateReocrdVHP(PMSLargeScreen.PMSMainService.DcRecordVHP model) {
            return base.Channel.UpdateReocrdVHP(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdVHPAsync(PMSLargeScreen.PMSMainService.DcRecordVHP model) {
            return base.Channel.UpdateReocrdVHPAsync(model);
        }
        
        public int DeleteRecordVHP(System.Guid id) {
            return base.Channel.DeleteRecordVHP(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordVHPAsync(System.Guid id) {
            return base.Channel.DeleteRecordVHPAsync(id);
        }
        
        public int AddRecordVHPItem(PMSLargeScreen.PMSMainService.DcRecordVHPItem model) {
            return base.Channel.AddRecordVHPItem(model);
        }
        
        public System.Threading.Tasks.Task<int> AddRecordVHPItemAsync(PMSLargeScreen.PMSMainService.DcRecordVHPItem model) {
            return base.Channel.AddRecordVHPItemAsync(model);
        }
        
        public int UpdateReocrdVHPItem(PMSLargeScreen.PMSMainService.DcRecordVHPItem model) {
            return base.Channel.UpdateReocrdVHPItem(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReocrdVHPItemAsync(PMSLargeScreen.PMSMainService.DcRecordVHPItem model) {
            return base.Channel.UpdateReocrdVHPItemAsync(model);
        }
        
        public int DeleteRecordVHPItem(System.Guid id) {
            return base.Channel.DeleteRecordVHPItem(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRecordVHPItemAsync(System.Guid id) {
            return base.Channel.DeleteRecordVHPItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        PMSLargeScreen.PMSMainService.DcBDCustomer[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDCustomer[]> GetCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        int AddCustomer(PMSLargeScreen.PMSMainService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(PMSLargeScreen.PMSMainService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        int UpdateCustomer(PMSLargeScreen.PMSMainService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(PMSLargeScreen.PMSMainService.DcBDCustomer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        int DeleteCustomer(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : PMSLargeScreen.PMSMainService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.ICustomerService>, PMSLargeScreen.PMSMainService.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDCustomer[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDCustomer[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
        
        public int AddCustomer(PMSLargeScreen.PMSMainService.DcBDCustomer model) {
            return base.Channel.AddCustomer(model);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(PMSLargeScreen.PMSMainService.DcBDCustomer model) {
            return base.Channel.AddCustomerAsync(model);
        }
        
        public int UpdateCustomer(PMSLargeScreen.PMSMainService.DcBDCustomer model) {
            return base.Channel.UpdateCustomer(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(PMSLargeScreen.PMSMainService.DcBDCustomer model) {
            return base.Channel.UpdateCustomerAsync(model);
        }
        
        public int DeleteCustomer(System.Guid id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(System.Guid id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IDeliveryAddressService")]
    public interface IDeliveryAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddressResponse")]
        PMSLargeScreen.PMSMainService.DcBDDeliveryAddress[] GetDeliveryAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/GetDeliveryAddressResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDDeliveryAddress[]> GetDeliveryAddressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddressResponse")]
        int AddDeliveryAddress(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/AddDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> AddDeliveryAddressAsync(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddressResponse")]
        int UpdateDeliveryAddress(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/UpdateDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> UpdateDeliveryAddressAsync(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddressResponse")]
        int DeleteDeliveryAddress(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddress", ReplyAction="http://tempuri.org/IDeliveryAddressService/DeleteDeliveryAddressResponse")]
        System.Threading.Tasks.Task<int> DeleteDeliveryAddressAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeliveryAddressServiceChannel : PMSLargeScreen.PMSMainService.IDeliveryAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliveryAddressServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IDeliveryAddressService>, PMSLargeScreen.PMSMainService.IDeliveryAddressService {
        
        public DeliveryAddressServiceClient() {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryAddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeliveryAddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDDeliveryAddress[] GetDeliveryAddress() {
            return base.Channel.GetDeliveryAddress();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDDeliveryAddress[]> GetDeliveryAddressAsync() {
            return base.Channel.GetDeliveryAddressAsync();
        }
        
        public int AddDeliveryAddress(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model) {
            return base.Channel.AddDeliveryAddress(model);
        }
        
        public System.Threading.Tasks.Task<int> AddDeliveryAddressAsync(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model) {
            return base.Channel.AddDeliveryAddressAsync(model);
        }
        
        public int UpdateDeliveryAddress(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model) {
            return base.Channel.UpdateDeliveryAddress(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDeliveryAddressAsync(PMSLargeScreen.PMSMainService.DcBDDeliveryAddress model) {
            return base.Channel.UpdateDeliveryAddressAsync(model);
        }
        
        public int DeleteDeliveryAddress(System.Guid id) {
            return base.Channel.DeleteDeliveryAddress(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDeliveryAddressAsync(System.Guid id) {
            return base.Channel.DeleteDeliveryAddressAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IVHPDeviceService")]
    public interface IVHPDeviceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/GetVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/GetVHPDeviceResponse")]
        PMSLargeScreen.PMSMainService.DcBDVHPDevice[] GetVHPDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/GetVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/GetVHPDeviceResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPDevice[]> GetVHPDeviceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/AddVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/AddVHPDeviceResponse")]
        int AddVHPDevice(PMSLargeScreen.PMSMainService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/AddVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/AddVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> AddVHPDeviceAsync(PMSLargeScreen.PMSMainService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/UpdateVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/UpdateVHPDeviceResponse")]
        int UpdateVHPDevice(PMSLargeScreen.PMSMainService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/UpdateVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/UpdateVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPDeviceAsync(PMSLargeScreen.PMSMainService.DcBDVHPDevice model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/DeleteVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/DeleteVHPDeviceResponse")]
        int DeleteVHPDevice(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPDeviceService/DeleteVHPDevice", ReplyAction="http://tempuri.org/IVHPDeviceService/DeleteVHPDeviceResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPDeviceAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPDeviceServiceChannel : PMSLargeScreen.PMSMainService.IVHPDeviceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPDeviceServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IVHPDeviceService>, PMSLargeScreen.PMSMainService.IVHPDeviceService {
        
        public VHPDeviceServiceClient() {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPDeviceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPDeviceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDVHPDevice[] GetVHPDevice() {
            return base.Channel.GetVHPDevice();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPDevice[]> GetVHPDeviceAsync() {
            return base.Channel.GetVHPDeviceAsync();
        }
        
        public int AddVHPDevice(PMSLargeScreen.PMSMainService.DcBDVHPDevice model) {
            return base.Channel.AddVHPDevice(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPDeviceAsync(PMSLargeScreen.PMSMainService.DcBDVHPDevice model) {
            return base.Channel.AddVHPDeviceAsync(model);
        }
        
        public int UpdateVHPDevice(PMSLargeScreen.PMSMainService.DcBDVHPDevice model) {
            return base.Channel.UpdateVHPDevice(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPDeviceAsync(PMSLargeScreen.PMSMainService.DcBDVHPDevice model) {
            return base.Channel.UpdateVHPDeviceAsync(model);
        }
        
        public int DeleteVHPDevice(System.Guid id) {
            return base.Channel.DeleteVHPDevice(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPDeviceAsync(System.Guid id) {
            return base.Channel.DeleteVHPDeviceAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IVHPMoldService")]
    public interface IVHPMoldService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/GetVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/GetVHPMoldResponse")]
        PMSLargeScreen.PMSMainService.DcBDVHPMold[] GetVHPMold();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/GetVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/GetVHPMoldResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPMold[]> GetVHPMoldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/AddVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/AddVHPMoldResponse")]
        int AddVHPMold(PMSLargeScreen.PMSMainService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/AddVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/AddVHPMoldResponse")]
        System.Threading.Tasks.Task<int> AddVHPMoldAsync(PMSLargeScreen.PMSMainService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/UpdateVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/UpdateVHPMoldResponse")]
        int UpdateVHPMold(PMSLargeScreen.PMSMainService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/UpdateVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/UpdateVHPMoldResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPMoldAsync(PMSLargeScreen.PMSMainService.DcBDVHPMold model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/DeleteVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/DeleteVHPMoldResponse")]
        int DeleteVHPMold(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPMoldService/DeleteVHPMold", ReplyAction="http://tempuri.org/IVHPMoldService/DeleteVHPMoldResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPMoldAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPMoldServiceChannel : PMSLargeScreen.PMSMainService.IVHPMoldService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPMoldServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IVHPMoldService>, PMSLargeScreen.PMSMainService.IVHPMoldService {
        
        public VHPMoldServiceClient() {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPMoldServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPMoldServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDVHPMold[] GetVHPMold() {
            return base.Channel.GetVHPMold();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPMold[]> GetVHPMoldAsync() {
            return base.Channel.GetVHPMoldAsync();
        }
        
        public int AddVHPMold(PMSLargeScreen.PMSMainService.DcBDVHPMold model) {
            return base.Channel.AddVHPMold(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPMoldAsync(PMSLargeScreen.PMSMainService.DcBDVHPMold model) {
            return base.Channel.AddVHPMoldAsync(model);
        }
        
        public int UpdateVHPMold(PMSLargeScreen.PMSMainService.DcBDVHPMold model) {
            return base.Channel.UpdateVHPMold(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPMoldAsync(PMSLargeScreen.PMSMainService.DcBDVHPMold model) {
            return base.Channel.UpdateVHPMoldAsync(model);
        }
        
        public int DeleteVHPMold(System.Guid id) {
            return base.Channel.DeleteVHPMold(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPMoldAsync(System.Guid id) {
            return base.Channel.DeleteVHPMoldAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.IVHPProcessService")]
    public interface IVHPProcessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/GetVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/GetVHPProcessResponse")]
        PMSLargeScreen.PMSMainService.DcBDVHPProcess[] GetVHPProcess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/GetVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/GetVHPProcessResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPProcess[]> GetVHPProcessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/AddVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/AddVHPProcessResponse")]
        int AddVHPProcess(PMSLargeScreen.PMSMainService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/AddVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/AddVHPProcessResponse")]
        System.Threading.Tasks.Task<int> AddVHPProcessAsync(PMSLargeScreen.PMSMainService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/UpdateVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/UpdateVHPProcessResponse")]
        int UpdateVHPProcess(PMSLargeScreen.PMSMainService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/UpdateVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/UpdateVHPProcessResponse")]
        System.Threading.Tasks.Task<int> UpdateVHPProcessAsync(PMSLargeScreen.PMSMainService.DcBDVHPProcess model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/DeleteVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/DeleteVHPProcessResponse")]
        int DeleteVHPProcess(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPProcessService/DeleteVHPProcess", ReplyAction="http://tempuri.org/IVHPProcessService/DeleteVHPProcessResponse")]
        System.Threading.Tasks.Task<int> DeleteVHPProcessAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPProcessServiceChannel : PMSLargeScreen.PMSMainService.IVHPProcessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPProcessServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.IVHPProcessService>, PMSLargeScreen.PMSMainService.IVHPProcessService {
        
        public VHPProcessServiceClient() {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPProcessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPProcessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDVHPProcess[] GetVHPProcess() {
            return base.Channel.GetVHPProcess();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDVHPProcess[]> GetVHPProcessAsync() {
            return base.Channel.GetVHPProcessAsync();
        }
        
        public int AddVHPProcess(PMSLargeScreen.PMSMainService.DcBDVHPProcess model) {
            return base.Channel.AddVHPProcess(model);
        }
        
        public System.Threading.Tasks.Task<int> AddVHPProcessAsync(PMSLargeScreen.PMSMainService.DcBDVHPProcess model) {
            return base.Channel.AddVHPProcessAsync(model);
        }
        
        public int UpdateVHPProcess(PMSLargeScreen.PMSMainService.DcBDVHPProcess model) {
            return base.Channel.UpdateVHPProcess(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateVHPProcessAsync(PMSLargeScreen.PMSMainService.DcBDVHPProcess model) {
            return base.Channel.UpdateVHPProcessAsync(model);
        }
        
        public int DeleteVHPProcess(System.Guid id) {
            return base.Channel.DeleteVHPProcess(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteVHPProcessAsync(System.Guid id) {
            return base.Channel.DeleteVHPProcessAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.ICompoundService")]
    public interface ICompoundService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/GetAllCompounds", ReplyAction="http://tempuri.org/ICompoundService/GetAllCompoundsResponse")]
        PMSLargeScreen.PMSMainService.DcBDCompound[] GetAllCompounds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/GetAllCompounds", ReplyAction="http://tempuri.org/ICompoundService/GetAllCompoundsResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDCompound[]> GetAllCompoundsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/AddCompound", ReplyAction="http://tempuri.org/ICompoundService/AddCompoundResponse")]
        int AddCompound(PMSLargeScreen.PMSMainService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/AddCompound", ReplyAction="http://tempuri.org/ICompoundService/AddCompoundResponse")]
        System.Threading.Tasks.Task<int> AddCompoundAsync(PMSLargeScreen.PMSMainService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/UpdateCompound", ReplyAction="http://tempuri.org/ICompoundService/UpdateCompoundResponse")]
        int UpdateCompound(PMSLargeScreen.PMSMainService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/UpdateCompound", ReplyAction="http://tempuri.org/ICompoundService/UpdateCompoundResponse")]
        System.Threading.Tasks.Task<int> UpdateCompoundAsync(PMSLargeScreen.PMSMainService.DcBDCompound model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/DeleteCompound", ReplyAction="http://tempuri.org/ICompoundService/DeleteCompoundResponse")]
        int DeleteCompound(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompoundService/DeleteCompound", ReplyAction="http://tempuri.org/ICompoundService/DeleteCompoundResponse")]
        System.Threading.Tasks.Task<int> DeleteCompoundAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompoundServiceChannel : PMSLargeScreen.PMSMainService.ICompoundService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompoundServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.ICompoundService>, PMSLargeScreen.PMSMainService.ICompoundService {
        
        public CompoundServiceClient() {
        }
        
        public CompoundServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompoundServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompoundServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompoundServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PMSLargeScreen.PMSMainService.DcBDCompound[] GetAllCompounds() {
            return base.Channel.GetAllCompounds();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDCompound[]> GetAllCompoundsAsync() {
            return base.Channel.GetAllCompoundsAsync();
        }
        
        public int AddCompound(PMSLargeScreen.PMSMainService.DcBDCompound model) {
            return base.Channel.AddCompound(model);
        }
        
        public System.Threading.Tasks.Task<int> AddCompoundAsync(PMSLargeScreen.PMSMainService.DcBDCompound model) {
            return base.Channel.AddCompoundAsync(model);
        }
        
        public int UpdateCompound(PMSLargeScreen.PMSMainService.DcBDCompound model) {
            return base.Channel.UpdateCompound(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCompoundAsync(PMSLargeScreen.PMSMainService.DcBDCompound model) {
            return base.Channel.UpdateCompoundAsync(model);
        }
        
        public int DeleteCompound(System.Guid id) {
            return base.Channel.DeleteCompound(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCompoundAsync(System.Guid id) {
            return base.Channel.DeleteCompoundAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMSMainService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        int AddSupplier(PMSLargeScreen.PMSMainService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddSupplierResponse")]
        System.Threading.Tasks.Task<int> AddSupplierAsync(PMSLargeScreen.PMSMainService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        int UpdateSupplier(PMSLargeScreen.PMSMainService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/UpdateSupplier", ReplyAction="http://tempuri.org/ISupplierService/UpdateSupplierResponse")]
        System.Threading.Tasks.Task<int> UpdateSupplierAsync(PMSLargeScreen.PMSMainService.DcBDSupplier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        int DeleteSupplier(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        System.Threading.Tasks.Task<int> DeleteSupplierAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        PMSLargeScreen.PMSMainService.DcBDSupplier[] GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDSupplier[]> GetSuppliersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : PMSLargeScreen.PMSMainService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<PMSLargeScreen.PMSMainService.ISupplierService>, PMSLargeScreen.PMSMainService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddSupplier(PMSLargeScreen.PMSMainService.DcBDSupplier model) {
            return base.Channel.AddSupplier(model);
        }
        
        public System.Threading.Tasks.Task<int> AddSupplierAsync(PMSLargeScreen.PMSMainService.DcBDSupplier model) {
            return base.Channel.AddSupplierAsync(model);
        }
        
        public int UpdateSupplier(PMSLargeScreen.PMSMainService.DcBDSupplier model) {
            return base.Channel.UpdateSupplier(model);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSupplierAsync(PMSLargeScreen.PMSMainService.DcBDSupplier model) {
            return base.Channel.UpdateSupplierAsync(model);
        }
        
        public int DeleteSupplier(System.Guid id) {
            return base.Channel.DeleteSupplier(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSupplierAsync(System.Guid id) {
            return base.Channel.DeleteSupplierAsync(id);
        }
        
        public PMSLargeScreen.PMSMainService.DcBDSupplier[] GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<PMSLargeScreen.PMSMainService.DcBDSupplier[]> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
    }
}
